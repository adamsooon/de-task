{"version":3,"sources":["../node_modules/crc-32/crc32.js","../node_modules/node-libs-browser/node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/png-chunks-extract/index.js"],"names":["factory","CRC32","version","table","c","Array","n","Int32Array","signed_crc_table","use_buffer","Buffer","crc32_buf_8","buf","crc","i","L","length","bstr","charCodeAt","str","d","DO_NOT_EXPORT_CRC","exports","base64","require","ieee754","isArray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","prototype","arg","encodingOrOffset","this","Error","allocUnsafe","from","value","TypeError","ArrayBuffer","array","byteOffset","byteLength","undefined","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","slice","fromString","obj","isBuffer","len","checked","copy","buffer","val","type","data","fromObject","assertSize","size","toString","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","b","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","push","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","Symbol","species","Object","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","maxChunkLength","len2","encodeChunk","lookup","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","abs","log","LN2","module","crc32","ended","chunks","idx","uint32","chunk","name","crcActual","int32","chunkData","Uint32Array"],"mappings":";8FAAA,YAEA,IACWA,IAgBT,SAASC,GACXA,EAAMC,QAAU,QAqBhB,IAAIC,EAnBJ,WAGC,IAFA,IAAIC,EAAI,EAAGD,EAAQ,IAAIE,MAAM,KAErBC,EAAG,EAAQ,KAALA,IAAYA,EASzBF,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAQ,GADRA,EAAIE,IACW,UAAaF,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,IAChC,UAAaA,IAAM,EAAOA,IAAM,EAC/CD,EAAMG,GAAKF,EAGZ,MAA6B,qBAAfG,WAA6B,IAAIA,WAAWJ,GAASA,EAGxDK,GAERC,EAA+B,qBAAXC,EAwBxB,SAASC,EAAYC,GACpB,IAAI,IAAIC,GAAO,EAAGC,EAAI,EAAGC,EAAEH,EAAII,OAAO,EAAGF,EAAIC,GAQ5CF,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAOA,IAAQ,EAAKV,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,OAEpC,KAAMA,EAAIC,EAAE,GAAGF,EAAOA,IAAQ,EAAKV,EAAqB,KAAdU,EAAID,EAAIE,OAClD,OAAc,EAAPD,EA0BRZ,EAAME,MAAQA,EACdF,EAAMgB,KA9DN,SAAoBA,GACnB,GAAGA,EAAKD,OAAS,OAAUP,EAAY,OAAOE,EAAY,IAAID,EAAOO,IAErE,IADA,IAAIJ,GAAO,EAAGE,EAAIE,EAAKD,OAAS,EACxBF,EAAI,EAAGA,EAAIC,GAClBF,EAAOV,EAAqC,KAA9BU,EAAMI,EAAKC,WAAWJ,OAAiBD,IAAQ,EAC7DA,EAAOV,EAAqC,KAA9BU,EAAMI,EAAKC,WAAWJ,OAAiBD,IAAQ,EAG9D,OADGC,IAAMC,IAAGF,EAAOA,IAAQ,EAAKV,EAAmC,KAA5BU,EAAMI,EAAKC,WAAWJ,OAC/C,EAAPD,GAuDRZ,EAAMW,IApDN,SAAmBA,GAClB,GAAGA,EAAII,OAAS,IAAO,OAAOL,EAAYC,GAC1C,IAAI,IAAIC,GAAO,EAAGC,EAAI,EAAGC,EAAEH,EAAII,OAAO,EAAGF,EAAIC,GAI5CF,GADAA,GADAA,GADAA,EAAOA,IAAQ,EAAKV,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,UACpB,EAAKX,EAAqB,KAAdU,EAAID,EAAIE,OAEpC,KAAMA,EAAIC,EAAE,GAAGF,EAAOA,IAAQ,EAAKV,EAAqB,KAAdU,EAAID,EAAIE,OAClD,OAAc,EAAPD,GA4CRZ,EAAMkB,IAzBN,SAAmBA,GAClB,IAAI,IAAmCf,EAAGgB,EAAlCP,GAAO,EAAGC,EAAI,EAAGC,EAAEI,EAAIH,OAAcF,EAAIC,IAChDX,EAAIe,EAAID,WAAWJ,MACZ,IACND,EAAOA,IAAQ,EAAKV,EAAkB,KAAXU,EAAMT,IACxBA,EAAI,KAEbS,GADAA,EAAOA,IAAQ,EAAKV,EAAkC,KAA3BU,GAAO,IAAMT,GAAG,EAAG,SAC/B,EAAKD,EAA6B,KAAtBU,GAAO,IAAO,GAAFT,KAC9BA,GAAK,OAAUA,EAAI,OAC5BA,EAAa,IAAN,KAAFA,GAAYgB,EAA0B,KAAtBD,EAAID,WAAWJ,KAIpCD,GADAA,GADAA,GADAA,EAAOA,IAAQ,EAAKV,EAAiC,KAA1BU,GAAO,IAAMT,GAAG,EAAG,QAC/B,EAAKD,EAAkC,KAA3BU,GAAO,IAAMT,GAAG,EAAG,SAC/B,EAAKD,EAAwC,KAAjCU,GAAO,IAAMO,GAAG,EAAG,GAAO,EAAFhB,QACpC,EAAKD,EAA6B,KAAtBU,GAAO,IAAO,GAAFO,MAIvCP,GADAA,GADAA,EAAOA,IAAQ,EAAKV,EAAmC,KAA5BU,GAAO,IAAMT,GAAG,GAAI,SAChC,EAAKD,EAAkC,KAA3BU,GAAO,IAAMT,GAAG,EAAG,SAC/B,EAAKD,EAA6B,KAAtBU,GAAO,IAAO,GAAFT,KAGzC,OAAc,EAAPS,IAnGyB,qBAAtBQ,kBAERrB,EAAQsB,GAWTtB,EAAgB,M,4DCjBlB,YAUA,IAAIuB,EAASC,EAAQ,KACjBC,EAAUD,EAAQ,KAClBE,EAAUF,EAAQ,KAmDtB,SAASG,IACP,OAAOjB,EAAOkB,oBACV,WACA,WAGN,SAASC,EAAcC,EAAMd,GAC3B,GAAIW,IAAeX,EACjB,MAAM,IAAIe,WAAW,8BAcvB,OAZIrB,EAAOkB,qBAETE,EAAO,IAAIE,WAAWhB,IACjBiB,UAAYvB,EAAOwB,WAGX,OAATJ,IACFA,EAAO,IAAIpB,EAAOM,IAEpBc,EAAKd,OAASA,GAGTc,EAaT,SAASpB,EAAQyB,EAAKC,EAAkBpB,GACtC,IAAKN,EAAOkB,uBAAyBS,gBAAgB3B,GACnD,OAAO,IAAIA,EAAOyB,EAAKC,EAAkBpB,GAI3C,GAAmB,kBAARmB,EAAkB,CAC3B,GAAgC,kBAArBC,EACT,MAAM,IAAIE,MACR,qEAGJ,OAAOC,EAAYF,KAAMF,GAE3B,OAAOK,EAAKH,KAAMF,EAAKC,EAAkBpB,GAW3C,SAASwB,EAAMV,EAAMW,EAAOL,EAAkBpB,GAC5C,GAAqB,kBAAVyB,EACT,MAAM,IAAIC,UAAU,yCAGtB,MAA2B,qBAAhBC,aAA+BF,aAAiBE,YA6H7D,SAA0Bb,EAAMc,EAAOC,EAAY7B,GAGjD,GAFA4B,EAAME,WAEFD,EAAa,GAAKD,EAAME,WAAaD,EACvC,MAAM,IAAId,WAAW,6BAGvB,GAAIa,EAAME,WAAaD,GAAc7B,GAAU,GAC7C,MAAM,IAAIe,WAAW,6BAIrBa,OADiBG,IAAfF,QAAuCE,IAAX/B,EACtB,IAAIgB,WAAWY,QACHG,IAAX/B,EACD,IAAIgB,WAAWY,EAAOC,GAEtB,IAAIb,WAAWY,EAAOC,EAAY7B,GAGxCN,EAAOkB,qBAETE,EAAOc,GACFX,UAAYvB,EAAOwB,UAGxBJ,EAAOkB,EAAclB,EAAMc,GAE7B,OAAOd,EAvJEmB,CAAgBnB,EAAMW,EAAOL,EAAkBpB,GAGnC,kBAAVyB,EAwFb,SAAqBX,EAAMoB,EAAQC,GACT,kBAAbA,GAAsC,KAAbA,IAClCA,EAAW,QAGb,IAAKzC,EAAO0C,WAAWD,GACrB,MAAM,IAAIT,UAAU,8CAGtB,IAAI1B,EAAwC,EAA/B8B,EAAWI,EAAQC,GAG5BE,GAFJvB,EAAOD,EAAaC,EAAMd,IAERsC,MAAMJ,EAAQC,GAE5BE,IAAWrC,IAIbc,EAAOA,EAAKyB,MAAM,EAAGF,IAGvB,OAAOvB,EA5GE0B,CAAW1B,EAAMW,EAAOL,GAsJnC,SAAqBN,EAAM2B,GACzB,GAAI/C,EAAOgD,SAASD,GAAM,CACxB,IAAIE,EAA4B,EAAtBC,EAAQH,EAAIzC,QAGtB,OAAoB,KAFpBc,EAAOD,EAAaC,EAAM6B,IAEjB3C,QAITyC,EAAII,KAAK/B,EAAM,EAAG,EAAG6B,GAHZ7B,EAOX,GAAI2B,EAAK,CACP,GAA4B,qBAAhBd,aACRc,EAAIK,kBAAkBnB,aAAgB,WAAYc,EACpD,MAA0B,kBAAfA,EAAIzC,SA+8CL+C,EA/8CkCN,EAAIzC,UAg9CrC+C,EA/8CFlC,EAAaC,EAAM,GAErBkB,EAAclB,EAAM2B,GAG7B,GAAiB,WAAbA,EAAIO,MAAqBtC,EAAQ+B,EAAIQ,MACvC,OAAOjB,EAAclB,EAAM2B,EAAIQ,MAw8CrC,IAAgBF,EAp8Cd,MAAM,IAAIrB,UAAU,sFA9KbwB,CAAWpC,EAAMW,GA4B1B,SAAS0B,EAAYC,GACnB,GAAoB,kBAATA,EACT,MAAM,IAAI1B,UAAU,oCACf,GAAI0B,EAAO,EAChB,MAAM,IAAIrC,WAAW,wCA4BzB,SAASQ,EAAaT,EAAMsC,GAG1B,GAFAD,EAAWC,GACXtC,EAAOD,EAAaC,EAAMsC,EAAO,EAAI,EAAoB,EAAhBR,EAAQQ,KAC5C1D,EAAOkB,oBACV,IAAK,IAAId,EAAI,EAAGA,EAAIsD,IAAQtD,EAC1BgB,EAAKhB,GAAK,EAGd,OAAOgB,EAwCT,SAASkB,EAAelB,EAAMc,GAC5B,IAAI5B,EAAS4B,EAAM5B,OAAS,EAAI,EAA4B,EAAxB4C,EAAQhB,EAAM5B,QAClDc,EAAOD,EAAaC,EAAMd,GAC1B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,GAAK,EAC/BgB,EAAKhB,GAAgB,IAAX8B,EAAM9B,GAElB,OAAOgB,EA+DT,SAAS8B,EAAS5C,GAGhB,GAAIA,GAAUW,IACZ,MAAM,IAAII,WAAW,0DACaJ,IAAa0C,SAAS,IAAM,UAEhE,OAAgB,EAATrD,EAsFT,SAAS8B,EAAYI,EAAQC,GAC3B,GAAIzC,EAAOgD,SAASR,GAClB,OAAOA,EAAOlC,OAEhB,GAA2B,qBAAhB2B,aAA6D,oBAAvBA,YAAY2B,SACxD3B,YAAY2B,OAAOpB,IAAWA,aAAkBP,aACnD,OAAOO,EAAOJ,WAEM,kBAAXI,IACTA,EAAS,GAAKA,GAGhB,IAAIS,EAAMT,EAAOlC,OACjB,GAAY,IAAR2C,EAAW,OAAO,EAItB,IADA,IAAIY,GAAc,IAEhB,OAAQpB,GACN,IAAK,QACL,IAAK,SACL,IAAK,SACH,OAAOQ,EACT,IAAK,OACL,IAAK,QACL,UAAKZ,EACH,OAAOyB,EAAYtB,GAAQlC,OAC7B,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAa,EAAN2C,EACT,IAAK,MACH,OAAOA,IAAQ,EACjB,IAAK,SACH,OAAOc,EAAcvB,GAAQlC,OAC/B,QACE,GAAIuD,EAAa,OAAOC,EAAYtB,GAAQlC,OAC5CmC,GAAY,GAAKA,GAAUuB,cAC3BH,GAAc,GAMtB,SAASI,EAAcxB,EAAUyB,EAAOC,GACtC,IAAIN,GAAc,EAclB,SALcxB,IAAV6B,GAAuBA,EAAQ,KACjCA,EAAQ,GAINA,EAAQvC,KAAKrB,OACf,MAAO,GAOT,SAJY+B,IAAR8B,GAAqBA,EAAMxC,KAAKrB,UAClC6D,EAAMxC,KAAKrB,QAGT6D,GAAO,EACT,MAAO,GAOT,IAHAA,KAAS,KACTD,KAAW,GAGT,MAAO,GAKT,IAFKzB,IAAUA,EAAW,UAGxB,OAAQA,GACN,IAAK,MACH,OAAO2B,EAASzC,KAAMuC,EAAOC,GAE/B,IAAK,OACL,IAAK,QACH,OAAOE,EAAU1C,KAAMuC,EAAOC,GAEhC,IAAK,QACH,OAAOG,EAAW3C,KAAMuC,EAAOC,GAEjC,IAAK,SACL,IAAK,SACH,OAAOI,EAAY5C,KAAMuC,EAAOC,GAElC,IAAK,SACH,OAAOK,EAAY7C,KAAMuC,EAAOC,GAElC,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOM,EAAa9C,KAAMuC,EAAOC,GAEnC,QACE,GAAIN,EAAa,MAAM,IAAI7B,UAAU,qBAAuBS,GAC5DA,GAAYA,EAAW,IAAIuB,cAC3BH,GAAc,GAStB,SAASa,EAAMC,EAAG/E,EAAGgF,GACnB,IAAIxE,EAAIuE,EAAE/E,GACV+E,EAAE/E,GAAK+E,EAAEC,GACTD,EAAEC,GAAKxE,EAmIT,SAASyE,EAAsBzB,EAAQC,EAAKlB,EAAYM,EAAUqC,GAEhE,GAAsB,IAAlB1B,EAAO9C,OAAc,OAAQ,EAmBjC,GAhB0B,kBAAf6B,GACTM,EAAWN,EACXA,EAAa,GACJA,EAAa,WACtBA,EAAa,WACJA,GAAc,aACvBA,GAAc,YAEhBA,GAAcA,EACV4C,MAAM5C,KAERA,EAAa2C,EAAM,EAAK1B,EAAO9C,OAAS,GAItC6B,EAAa,IAAGA,EAAaiB,EAAO9C,OAAS6B,GAC7CA,GAAciB,EAAO9C,OAAQ,CAC/B,GAAIwE,EAAK,OAAQ,EACZ3C,EAAaiB,EAAO9C,OAAS,OAC7B,GAAI6B,EAAa,EAAG,CACzB,IAAI2C,EACC,OAAQ,EADJ3C,EAAa,EAUxB,GALmB,kBAARkB,IACTA,EAAMrD,EAAO8B,KAAKuB,EAAKZ,IAIrBzC,EAAOgD,SAASK,GAElB,OAAmB,IAAfA,EAAI/C,QACE,EAEH0E,EAAa5B,EAAQC,EAAKlB,EAAYM,EAAUqC,GAClD,GAAmB,kBAARzB,EAEhB,OADAA,GAAY,IACRrD,EAAOkB,qBACiC,oBAAjCI,WAAWE,UAAUyD,QAC1BH,EACKxD,WAAWE,UAAUyD,QAAQC,KAAK9B,EAAQC,EAAKlB,GAE/Cb,WAAWE,UAAU2D,YAAYD,KAAK9B,EAAQC,EAAKlB,GAGvD6C,EAAa5B,EAAQ,CAAEC,GAAOlB,EAAYM,EAAUqC,GAG7D,MAAM,IAAI9C,UAAU,wCAGtB,SAASgD,EAAcI,EAAK/B,EAAKlB,EAAYM,EAAUqC,GACrD,IA0BI1E,EA1BAiF,EAAY,EACZC,EAAYF,EAAI9E,OAChBiF,EAAYlC,EAAI/C,OAEpB,QAAiB+B,IAAbI,IAEe,UADjBA,EAAW+C,OAAO/C,GAAUuB,gBACY,UAAbvB,GACV,YAAbA,GAAuC,aAAbA,GAAyB,CACrD,GAAI2C,EAAI9E,OAAS,GAAK+C,EAAI/C,OAAS,EACjC,OAAQ,EAEV+E,EAAY,EACZC,GAAa,EACbC,GAAa,EACbpD,GAAc,EAIlB,SAASsD,EAAMvF,EAAKE,GAClB,OAAkB,IAAdiF,EACKnF,EAAIE,GAEJF,EAAIwF,aAAatF,EAAIiF,GAKhC,GAAIP,EAAK,CACP,IAAIa,GAAc,EAClB,IAAKvF,EAAI+B,EAAY/B,EAAIkF,EAAWlF,IAClC,GAAIqF,EAAKL,EAAKhF,KAAOqF,EAAKpC,GAAqB,IAAhBsC,EAAoB,EAAIvF,EAAIuF,IAEzD,IADoB,IAAhBA,IAAmBA,EAAavF,GAChCA,EAAIuF,EAAa,IAAMJ,EAAW,OAAOI,EAAaN,OAEtC,IAAhBM,IAAmBvF,GAAKA,EAAIuF,GAChCA,GAAc,OAKlB,IADIxD,EAAaoD,EAAYD,IAAWnD,EAAamD,EAAYC,GAC5DnF,EAAI+B,EAAY/B,GAAK,EAAGA,IAAK,CAEhC,IADA,IAAIwF,GAAQ,EACHC,EAAI,EAAGA,EAAIN,EAAWM,IAC7B,GAAIJ,EAAKL,EAAKhF,EAAIyF,KAAOJ,EAAKpC,EAAKwC,GAAI,CACrCD,GAAQ,EACR,MAGJ,GAAIA,EAAO,OAAOxF,EAItB,OAAQ,EAeV,SAAS0F,EAAU5F,EAAKsC,EAAQuD,EAAQzF,GACtCyF,EAASC,OAAOD,IAAW,EAC3B,IAAIE,EAAY/F,EAAII,OAASyF,EACxBzF,GAGHA,EAAS0F,OAAO1F,IACH2F,IACX3F,EAAS2F,GAJX3F,EAAS2F,EASX,IAAIC,EAAS1D,EAAOlC,OACpB,GAAI4F,EAAS,IAAM,EAAG,MAAM,IAAIlE,UAAU,sBAEtC1B,EAAS4F,EAAS,IACpB5F,EAAS4F,EAAS,GAEpB,IAAK,IAAI9F,EAAI,EAAGA,EAAIE,IAAUF,EAAG,CAC/B,IAAI+F,EAASC,SAAS5D,EAAO6D,OAAW,EAAJjG,EAAO,GAAI,IAC/C,GAAI2E,MAAMoB,GAAS,OAAO/F,EAC1BF,EAAI6F,EAAS3F,GAAK+F,EAEpB,OAAO/F,EAGT,SAASkG,EAAWpG,EAAKsC,EAAQuD,EAAQzF,GACvC,OAAOiG,EAAWzC,EAAYtB,EAAQtC,EAAII,OAASyF,GAAS7F,EAAK6F,EAAQzF,GAG3E,SAASkG,EAAYtG,EAAKsC,EAAQuD,EAAQzF,GACxC,OAAOiG,EAq6BT,SAAuB9F,GAErB,IADA,IAAIgG,EAAY,GACPrG,EAAI,EAAGA,EAAIK,EAAIH,SAAUF,EAEhCqG,EAAUC,KAAyB,IAApBjG,EAAID,WAAWJ,IAEhC,OAAOqG,EA36BWE,CAAanE,GAAStC,EAAK6F,EAAQzF,GAGvD,SAASsG,EAAa1G,EAAKsC,EAAQuD,EAAQzF,GACzC,OAAOkG,EAAWtG,EAAKsC,EAAQuD,EAAQzF,GAGzC,SAASuG,EAAa3G,EAAKsC,EAAQuD,EAAQzF,GACzC,OAAOiG,EAAWxC,EAAcvB,GAAStC,EAAK6F,EAAQzF,GAGxD,SAASwG,EAAW5G,EAAKsC,EAAQuD,EAAQzF,GACvC,OAAOiG,EAk6BT,SAAyB9F,EAAKsG,GAG5B,IAFA,IAAIrH,EAAGsH,EAAIC,EACPR,EAAY,GACPrG,EAAI,EAAGA,EAAIK,EAAIH,WACjByG,GAAS,GAAK,KADa3G,EAIhC4G,GADAtH,EAAIe,EAAID,WAAWJ,KACT,EACV6G,EAAKvH,EAAI,IACT+G,EAAUC,KAAKO,GACfR,EAAUC,KAAKM,GAGjB,OAAOP,EA/6BWS,CAAe1E,EAAQtC,EAAII,OAASyF,GAAS7F,EAAK6F,EAAQzF,GAkF9E,SAASkE,EAAatE,EAAKgE,EAAOC,GAChC,OAAc,IAAVD,GAAeC,IAAQjE,EAAII,OACtBO,EAAOsG,cAAcjH,GAErBW,EAAOsG,cAAcjH,EAAI2C,MAAMqB,EAAOC,IAIjD,SAASE,EAAWnE,EAAKgE,EAAOC,GAC9BA,EAAMiD,KAAKC,IAAInH,EAAII,OAAQ6D,GAI3B,IAHA,IAAImD,EAAM,GAENlH,EAAI8D,EACD9D,EAAI+D,GAAK,CACd,IAQMoD,EAAYC,EAAWC,EAAYC,EARrCC,EAAYzH,EAAIE,GAChBwH,EAAY,KACZC,EAAoBF,EAAY,IAAQ,EACvCA,EAAY,IAAQ,EACpBA,EAAY,IAAQ,EACrB,EAEJ,GAAIvH,EAAIyH,GAAoB1D,EAG1B,OAAQ0D,GACN,KAAK,EACCF,EAAY,MACdC,EAAYD,GAEd,MACF,KAAK,EAEyB,OAAV,KADlBJ,EAAarH,EAAIE,EAAI,OAEnBsH,GAA6B,GAAZC,IAAqB,EAAoB,GAAbJ,GACzB,MAClBK,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAarH,EAAIE,EAAI,GACrBoH,EAAYtH,EAAIE,EAAI,GACQ,OAAV,IAAbmH,IAAsD,OAAV,IAAZC,KACnCE,GAA6B,GAAZC,IAAoB,IAAoB,GAAbJ,IAAsB,EAAmB,GAAZC,GACrD,OAAUE,EAAgB,OAAUA,EAAgB,SACtEE,EAAYF,GAGhB,MACF,KAAK,EACHH,EAAarH,EAAIE,EAAI,GACrBoH,EAAYtH,EAAIE,EAAI,GACpBqH,EAAavH,EAAIE,EAAI,GACO,OAAV,IAAbmH,IAAsD,OAAV,IAAZC,IAAsD,OAAV,IAAbC,KAClEC,GAA6B,GAAZC,IAAoB,IAAqB,GAAbJ,IAAsB,IAAmB,GAAZC,IAAqB,EAAoB,GAAbC,GAClF,OAAUC,EAAgB,UAC5CE,EAAYF,GAMJ,OAAdE,GAGFA,EAAY,MACZC,EAAmB,GACVD,EAAY,QAErBA,GAAa,MACbN,EAAIZ,KAAKkB,IAAc,GAAK,KAAQ,OACpCA,EAAY,MAAqB,KAAZA,GAGvBN,EAAIZ,KAAKkB,GACTxH,GAAKyH,EAGP,OAQF,SAAgCC,GAC9B,IAAI7E,EAAM6E,EAAWxH,OACrB,GAAI2C,GAAO8E,EACT,OAAOvC,OAAOwC,aAAaC,MAAMzC,OAAQsC,GAI3C,IAAIR,EAAM,GACNlH,EAAI,EACR,KAAOA,EAAI6C,GACTqE,GAAO9B,OAAOwC,aAAaC,MACzBzC,OACAsC,EAAWjF,MAAMzC,EAAGA,GAAK2H,IAG7B,OAAOT,EAvBAY,CAAsBZ,GA98B/B1G,EAAQZ,OAASA,EACjBY,EAAQuH,WAoTR,SAAqB7H,IACdA,GAAUA,IACbA,EAAS,GAEX,OAAON,EAAOoI,OAAO9H,IAvTvBM,EAAQyH,kBAAoB,GA0B5BrI,EAAOkB,yBAAqDmB,IAA/BiG,EAAOpH,oBAChCoH,EAAOpH,oBAQX,WACE,IACE,IAAIkE,EAAM,IAAI9D,WAAW,GAEzB,OADA8D,EAAI7D,UAAY,CAACA,UAAWD,WAAWE,UAAW+G,IAAK,WAAc,OAAO,KACvD,KAAdnD,EAAImD,OACiB,oBAAjBnD,EAAIoD,UACuB,IAAlCpD,EAAIoD,SAAS,EAAG,GAAGpG,WACvB,MAAOqG,GACP,OAAO,GAfPC,GAKJ9H,EAAQK,WAAaA,IAkErBjB,EAAO2I,SAAW,KAGlB3I,EAAO4I,SAAW,SAAUxD,GAE1B,OADAA,EAAI7D,UAAYvB,EAAOwB,UAChB4D,GA2BTpF,EAAO8B,KAAO,SAAUC,EAAOL,EAAkBpB,GAC/C,OAAOwB,EAAK,KAAMC,EAAOL,EAAkBpB,IAGzCN,EAAOkB,sBACTlB,EAAOwB,UAAUD,UAAYD,WAAWE,UACxCxB,EAAOuB,UAAYD,WACG,qBAAXuH,QAA0BA,OAAOC,SACxC9I,EAAO6I,OAAOC,WAAa9I,GAE7B+I,OAAOC,eAAehJ,EAAQ6I,OAAOC,QAAS,CAC5C/G,MAAO,KACPkH,cAAc,KAiCpBjJ,EAAOoI,MAAQ,SAAU1E,EAAMwF,EAAMzG,GACnC,OArBF,SAAgBrB,EAAMsC,EAAMwF,EAAMzG,GAEhC,OADAgB,EAAWC,GACPA,GAAQ,EACHvC,EAAaC,EAAMsC,QAEfrB,IAAT6G,EAIyB,kBAAbzG,EACVtB,EAAaC,EAAMsC,GAAMwF,KAAKA,EAAMzG,GACpCtB,EAAaC,EAAMsC,GAAMwF,KAAKA,GAE7B/H,EAAaC,EAAMsC,GAQnB0E,CAAM,KAAM1E,EAAMwF,EAAMzG,IAiBjCzC,EAAO6B,YAAc,SAAU6B,GAC7B,OAAO7B,EAAY,KAAM6B,IAK3B1D,EAAOmJ,gBAAkB,SAAUzF,GACjC,OAAO7B,EAAY,KAAM6B,IAiH3B1D,EAAOgD,SAAW,SAAmB2B,GACnC,QAAe,MAALA,IAAaA,EAAEyE,YAG3BpJ,EAAOqJ,QAAU,SAAkBC,EAAG3E,GACpC,IAAK3E,EAAOgD,SAASsG,KAAOtJ,EAAOgD,SAAS2B,GAC1C,MAAM,IAAI3C,UAAU,6BAGtB,GAAIsH,IAAM3E,EAAG,OAAO,EAKpB,IAHA,IAAI4E,EAAID,EAAEhJ,OACNkJ,EAAI7E,EAAErE,OAEDF,EAAI,EAAG6C,EAAMmE,KAAKC,IAAIkC,EAAGC,GAAIpJ,EAAI6C,IAAO7C,EAC/C,GAAIkJ,EAAElJ,KAAOuE,EAAEvE,GAAI,CACjBmJ,EAAID,EAAElJ,GACNoJ,EAAI7E,EAAEvE,GACN,MAIJ,OAAImJ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GAGTvJ,EAAO0C,WAAa,SAAqBD,GACvC,OAAQ+C,OAAO/C,GAAUuB,eACvB,IAAK,MACL,IAAK,OACL,IAAK,QACL,IAAK,QACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAO,EACT,QACE,OAAO,IAIbhE,EAAOyJ,OAAS,SAAiBC,EAAMpJ,GACrC,IAAKU,EAAQ0I,GACX,MAAM,IAAI1H,UAAU,+CAGtB,GAAoB,IAAhB0H,EAAKpJ,OACP,OAAON,EAAOoI,MAAM,GAGtB,IAAIhI,EACJ,QAAeiC,IAAX/B,EAEF,IADAA,EAAS,EACJF,EAAI,EAAGA,EAAIsJ,EAAKpJ,SAAUF,EAC7BE,GAAUoJ,EAAKtJ,GAAGE,OAItB,IAAI8C,EAASpD,EAAO6B,YAAYvB,GAC5BqJ,EAAM,EACV,IAAKvJ,EAAI,EAAGA,EAAIsJ,EAAKpJ,SAAUF,EAAG,CAChC,IAAIF,EAAMwJ,EAAKtJ,GACf,IAAKJ,EAAOgD,SAAS9C,GACnB,MAAM,IAAI8B,UAAU,+CAEtB9B,EAAIiD,KAAKC,EAAQuG,GACjBA,GAAOzJ,EAAII,OAEb,OAAO8C,GA8CTpD,EAAOoC,WAAaA,EA0EpBpC,EAAOwB,UAAU4H,WAAY,EAQ7BpJ,EAAOwB,UAAUoI,OAAS,WACxB,IAAI3G,EAAMtB,KAAKrB,OACf,GAAI2C,EAAM,IAAM,EACd,MAAM,IAAI5B,WAAW,6CAEvB,IAAK,IAAIjB,EAAI,EAAGA,EAAI6C,EAAK7C,GAAK,EAC5BsE,EAAK/C,KAAMvB,EAAGA,EAAI,GAEpB,OAAOuB,MAGT3B,EAAOwB,UAAUqI,OAAS,WACxB,IAAI5G,EAAMtB,KAAKrB,OACf,GAAI2C,EAAM,IAAM,EACd,MAAM,IAAI5B,WAAW,6CAEvB,IAAK,IAAIjB,EAAI,EAAGA,EAAI6C,EAAK7C,GAAK,EAC5BsE,EAAK/C,KAAMvB,EAAGA,EAAI,GAClBsE,EAAK/C,KAAMvB,EAAI,EAAGA,EAAI,GAExB,OAAOuB,MAGT3B,EAAOwB,UAAUsI,OAAS,WACxB,IAAI7G,EAAMtB,KAAKrB,OACf,GAAI2C,EAAM,IAAM,EACd,MAAM,IAAI5B,WAAW,6CAEvB,IAAK,IAAIjB,EAAI,EAAGA,EAAI6C,EAAK7C,GAAK,EAC5BsE,EAAK/C,KAAMvB,EAAGA,EAAI,GAClBsE,EAAK/C,KAAMvB,EAAI,EAAGA,EAAI,GACtBsE,EAAK/C,KAAMvB,EAAI,EAAGA,EAAI,GACtBsE,EAAK/C,KAAMvB,EAAI,EAAGA,EAAI,GAExB,OAAOuB,MAGT3B,EAAOwB,UAAUmC,SAAW,WAC1B,IAAIrD,EAAuB,EAAdqB,KAAKrB,OAClB,OAAe,IAAXA,EAAqB,GACA,IAArByJ,UAAUzJ,OAAqB+D,EAAU1C,KAAM,EAAGrB,GAC/C2D,EAAagE,MAAMtG,KAAMoI,YAGlC/J,EAAOwB,UAAUwI,OAAS,SAAiBrF,GACzC,IAAK3E,EAAOgD,SAAS2B,GAAI,MAAM,IAAI3C,UAAU,6BAC7C,OAAIL,OAASgD,GACsB,IAA5B3E,EAAOqJ,QAAQ1H,KAAMgD,IAG9B3E,EAAOwB,UAAUyI,QAAU,WACzB,IAAIxJ,EAAM,GACNyJ,EAAMtJ,EAAQyH,kBAKlB,OAJI1G,KAAKrB,OAAS,IAChBG,EAAMkB,KAAKgC,SAAS,MAAO,EAAGuG,GAAKC,MAAM,SAASC,KAAK,KACnDzI,KAAKrB,OAAS4J,IAAKzJ,GAAO,UAEzB,WAAaA,EAAM,KAG5BT,EAAOwB,UAAU6H,QAAU,SAAkBgB,EAAQnG,EAAOC,EAAKmG,EAAWC,GAC1E,IAAKvK,EAAOgD,SAASqH,GACnB,MAAM,IAAIrI,UAAU,6BAgBtB,QAbcK,IAAV6B,IACFA,EAAQ,QAEE7B,IAAR8B,IACFA,EAAMkG,EAASA,EAAO/J,OAAS,QAEf+B,IAAdiI,IACFA,EAAY,QAEEjI,IAAZkI,IACFA,EAAU5I,KAAKrB,QAGb4D,EAAQ,GAAKC,EAAMkG,EAAO/J,QAAUgK,EAAY,GAAKC,EAAU5I,KAAKrB,OACtE,MAAM,IAAIe,WAAW,sBAGvB,GAAIiJ,GAAaC,GAAWrG,GAASC,EACnC,OAAO,EAET,GAAImG,GAAaC,EACf,OAAQ,EAEV,GAAIrG,GAASC,EACX,OAAO,EAQT,GAAIxC,OAAS0I,EAAQ,OAAO,EAS5B,IAPA,IAAId,GAJJgB,KAAa,IADbD,KAAe,GAMXd,GAPJrF,KAAS,IADTD,KAAW,GASPjB,EAAMmE,KAAKC,IAAIkC,EAAGC,GAElBgB,EAAW7I,KAAKkB,MAAMyH,EAAWC,GACjCE,EAAaJ,EAAOxH,MAAMqB,EAAOC,GAE5B/D,EAAI,EAAGA,EAAI6C,IAAO7C,EACzB,GAAIoK,EAASpK,KAAOqK,EAAWrK,GAAI,CACjCmJ,EAAIiB,EAASpK,GACboJ,EAAIiB,EAAWrK,GACf,MAIJ,OAAImJ,EAAIC,GAAW,EACfA,EAAID,EAAU,EACX,GA6HTvJ,EAAOwB,UAAUkJ,SAAW,SAAmBrH,EAAKlB,EAAYM,GAC9D,OAAoD,IAA7Cd,KAAKsD,QAAQ5B,EAAKlB,EAAYM,IAGvCzC,EAAOwB,UAAUyD,QAAU,SAAkB5B,EAAKlB,EAAYM,GAC5D,OAAOoC,EAAqBlD,KAAM0B,EAAKlB,EAAYM,GAAU,IAG/DzC,EAAOwB,UAAU2D,YAAc,SAAsB9B,EAAKlB,EAAYM,GACpE,OAAOoC,EAAqBlD,KAAM0B,EAAKlB,EAAYM,GAAU,IAkD/DzC,EAAOwB,UAAUoB,MAAQ,SAAgBJ,EAAQuD,EAAQzF,EAAQmC,GAE/D,QAAeJ,IAAX0D,EACFtD,EAAW,OACXnC,EAASqB,KAAKrB,OACdyF,EAAS,OAEJ,QAAe1D,IAAX/B,GAA0C,kBAAXyF,EACxCtD,EAAWsD,EACXzF,EAASqB,KAAKrB,OACdyF,EAAS,MAEJ,KAAI4E,SAAS5E,GAWlB,MAAM,IAAInE,MACR,2EAXFmE,GAAkB,EACd4E,SAASrK,IACXA,GAAkB,OACD+B,IAAbI,IAAwBA,EAAW,UAEvCA,EAAWnC,EACXA,OAAS+B,GASb,IAAI4D,EAAYtE,KAAKrB,OAASyF,EAG9B,SAFe1D,IAAX/B,GAAwBA,EAAS2F,KAAW3F,EAAS2F,GAEpDzD,EAAOlC,OAAS,IAAMA,EAAS,GAAKyF,EAAS,IAAOA,EAASpE,KAAKrB,OACrE,MAAM,IAAIe,WAAW,0CAGlBoB,IAAUA,EAAW,QAG1B,IADA,IAAIoB,GAAc,IAEhB,OAAQpB,GACN,IAAK,MACH,OAAOqD,EAASnE,KAAMa,EAAQuD,EAAQzF,GAExC,IAAK,OACL,IAAK,QACH,OAAOgG,EAAU3E,KAAMa,EAAQuD,EAAQzF,GAEzC,IAAK,QACH,OAAOkG,EAAW7E,KAAMa,EAAQuD,EAAQzF,GAE1C,IAAK,SACL,IAAK,SACH,OAAOsG,EAAYjF,KAAMa,EAAQuD,EAAQzF,GAE3C,IAAK,SAEH,OAAOuG,EAAYlF,KAAMa,EAAQuD,EAAQzF,GAE3C,IAAK,OACL,IAAK,QACL,IAAK,UACL,IAAK,WACH,OAAOwG,EAAUnF,KAAMa,EAAQuD,EAAQzF,GAEzC,QACE,GAAIuD,EAAa,MAAM,IAAI7B,UAAU,qBAAuBS,GAC5DA,GAAY,GAAKA,GAAUuB,cAC3BH,GAAc,IAKtB7D,EAAOwB,UAAUoJ,OAAS,WACxB,MAAO,CACLtH,KAAM,SACNC,KAAM5D,MAAM6B,UAAUqB,MAAMqC,KAAKvD,KAAKkJ,MAAQlJ,KAAM,KAwFxD,IAAIoG,EAAuB,KAoB3B,SAASzD,EAAYpE,EAAKgE,EAAOC,GAC/B,IAAI2G,EAAM,GACV3G,EAAMiD,KAAKC,IAAInH,EAAII,OAAQ6D,GAE3B,IAAK,IAAI/D,EAAI8D,EAAO9D,EAAI+D,IAAO/D,EAC7B0K,GAAOtF,OAAOwC,aAAsB,IAAT9H,EAAIE,IAEjC,OAAO0K,EAGT,SAASvG,EAAarE,EAAKgE,EAAOC,GAChC,IAAI2G,EAAM,GACV3G,EAAMiD,KAAKC,IAAInH,EAAII,OAAQ6D,GAE3B,IAAK,IAAI/D,EAAI8D,EAAO9D,EAAI+D,IAAO/D,EAC7B0K,GAAOtF,OAAOwC,aAAa9H,EAAIE,IAEjC,OAAO0K,EAGT,SAAS1G,EAAUlE,EAAKgE,EAAOC,GAC7B,IAAIlB,EAAM/C,EAAII,SAET4D,GAASA,EAAQ,KAAGA,EAAQ,KAC5BC,GAAOA,EAAM,GAAKA,EAAMlB,KAAKkB,EAAMlB,GAGxC,IADA,IAAI8H,EAAM,GACD3K,EAAI8D,EAAO9D,EAAI+D,IAAO/D,EAC7B2K,GAAOC,EAAM9K,EAAIE,IAEnB,OAAO2K,EAGT,SAAStG,EAAcvE,EAAKgE,EAAOC,GAGjC,IAFA,IAAI8G,EAAQ/K,EAAI2C,MAAMqB,EAAOC,GACzBmD,EAAM,GACDlH,EAAI,EAAGA,EAAI6K,EAAM3K,OAAQF,GAAK,EACrCkH,GAAO9B,OAAOwC,aAAaiD,EAAM7K,GAAoB,IAAf6K,EAAM7K,EAAI,IAElD,OAAOkH,EA0CT,SAAS4D,EAAanF,EAAQoF,EAAK7K,GACjC,GAAKyF,EAAS,IAAO,GAAKA,EAAS,EAAG,MAAM,IAAI1E,WAAW,sBAC3D,GAAI0E,EAASoF,EAAM7K,EAAQ,MAAM,IAAIe,WAAW,yCA+JlD,SAAS+J,EAAUlL,EAAK6B,EAAOgE,EAAQoF,EAAKjB,EAAK7C,GAC/C,IAAKrH,EAAOgD,SAAS9C,GAAM,MAAM,IAAI8B,UAAU,+CAC/C,GAAID,EAAQmI,GAAOnI,EAAQsF,EAAK,MAAM,IAAIhG,WAAW,qCACrD,GAAI0E,EAASoF,EAAMjL,EAAII,OAAQ,MAAM,IAAIe,WAAW,sBAkDtD,SAASgK,EAAmBnL,EAAK6B,EAAOgE,EAAQuF,GAC1CvJ,EAAQ,IAAGA,EAAQ,MAASA,EAAQ,GACxC,IAAK,IAAI3B,EAAI,EAAGyF,EAAIuB,KAAKC,IAAInH,EAAII,OAASyF,EAAQ,GAAI3F,EAAIyF,IAAKzF,EAC7DF,EAAI6F,EAAS3F,IAAM2B,EAAS,KAAS,GAAKuJ,EAAelL,EAAI,EAAIA,MAClC,GAA5BkL,EAAelL,EAAI,EAAIA,GA8B9B,SAASmL,EAAmBrL,EAAK6B,EAAOgE,EAAQuF,GAC1CvJ,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GAC5C,IAAK,IAAI3B,EAAI,EAAGyF,EAAIuB,KAAKC,IAAInH,EAAII,OAASyF,EAAQ,GAAI3F,EAAIyF,IAAKzF,EAC7DF,EAAI6F,EAAS3F,GAAM2B,IAAuC,GAA5BuJ,EAAelL,EAAI,EAAIA,GAAU,IAmJnE,SAASoL,EAActL,EAAK6B,EAAOgE,EAAQoF,EAAKjB,EAAK7C,GACnD,GAAItB,EAASoF,EAAMjL,EAAII,OAAQ,MAAM,IAAIe,WAAW,sBACpD,GAAI0E,EAAS,EAAG,MAAM,IAAI1E,WAAW,sBAGvC,SAASoK,EAAYvL,EAAK6B,EAAOgE,EAAQuF,EAAcI,GAKrD,OAJKA,GACHF,EAAatL,EAAK6B,EAAOgE,EAAQ,GAEnChF,EAAQ6B,MAAM1C,EAAK6B,EAAOgE,EAAQuF,EAAc,GAAI,GAC7CvF,EAAS,EAWlB,SAAS4F,EAAazL,EAAK6B,EAAOgE,EAAQuF,EAAcI,GAKtD,OAJKA,GACHF,EAAatL,EAAK6B,EAAOgE,EAAQ,GAEnChF,EAAQ6B,MAAM1C,EAAK6B,EAAOgE,EAAQuF,EAAc,GAAI,GAC7CvF,EAAS,EA/clB/F,EAAOwB,UAAUqB,MAAQ,SAAgBqB,EAAOC,GAC9C,IAoBIyH,EApBA3I,EAAMtB,KAAKrB,OAqBf,IApBA4D,IAAUA,GAGE,GACVA,GAASjB,GACG,IAAGiB,EAAQ,GACdA,EAAQjB,IACjBiB,EAAQjB,IANVkB,OAAc9B,IAAR8B,EAAoBlB,IAAQkB,GASxB,GACRA,GAAOlB,GACG,IAAGkB,EAAM,GACVA,EAAMlB,IACfkB,EAAMlB,GAGJkB,EAAMD,IAAOC,EAAMD,GAGnBlE,EAAOkB,qBACT0K,EAASjK,KAAK6G,SAAStE,EAAOC,IACvB5C,UAAYvB,EAAOwB,cACrB,CACL,IAAIqK,EAAW1H,EAAMD,EACrB0H,EAAS,IAAI5L,EAAO6L,OAAUxJ,GAC9B,IAAK,IAAIjC,EAAI,EAAGA,EAAIyL,IAAYzL,EAC9BwL,EAAOxL,GAAKuB,KAAKvB,EAAI8D,GAIzB,OAAO0H,GAWT5L,EAAOwB,UAAUsK,WAAa,SAAqB/F,EAAQ3D,EAAYsJ,GACrE3F,GAAkB,EAClB3D,GAA0B,EACrBsJ,GAAUR,EAAYnF,EAAQ3D,EAAYT,KAAKrB,QAKpD,IAHA,IAAI+C,EAAM1B,KAAKoE,GACXgG,EAAM,EACN3L,EAAI,IACCA,EAAIgC,IAAe2J,GAAO,MACjC1I,GAAO1B,KAAKoE,EAAS3F,GAAK2L,EAG5B,OAAO1I,GAGTrD,EAAOwB,UAAUwK,WAAa,SAAqBjG,EAAQ3D,EAAYsJ,GACrE3F,GAAkB,EAClB3D,GAA0B,EACrBsJ,GACHR,EAAYnF,EAAQ3D,EAAYT,KAAKrB,QAKvC,IAFA,IAAI+C,EAAM1B,KAAKoE,IAAW3D,GACtB2J,EAAM,EACH3J,EAAa,IAAM2J,GAAO,MAC/B1I,GAAO1B,KAAKoE,IAAW3D,GAAc2J,EAGvC,OAAO1I,GAGTrD,EAAOwB,UAAUyK,UAAY,SAAoBlG,EAAQ2F,GAEvD,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCqB,KAAKoE,IAGd/F,EAAOwB,UAAU0K,aAAe,SAAuBnG,EAAQ2F,GAE7D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCqB,KAAKoE,GAAWpE,KAAKoE,EAAS,IAAM,GAG7C/F,EAAOwB,UAAUkE,aAAe,SAAuBK,EAAQ2F,GAE7D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACnCqB,KAAKoE,IAAW,EAAKpE,KAAKoE,EAAS,IAG7C/F,EAAOwB,UAAU2K,aAAe,SAAuBpG,EAAQ2F,GAG7D,OAFKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,SAElCqB,KAAKoE,GACTpE,KAAKoE,EAAS,IAAM,EACpBpE,KAAKoE,EAAS,IAAM,IACD,SAAnBpE,KAAKoE,EAAS,IAGrB/F,EAAOwB,UAAU4K,aAAe,SAAuBrG,EAAQ2F,GAG7D,OAFKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QAEpB,SAAfqB,KAAKoE,IACTpE,KAAKoE,EAAS,IAAM,GACrBpE,KAAKoE,EAAS,IAAM,EACrBpE,KAAKoE,EAAS,KAGlB/F,EAAOwB,UAAU6K,UAAY,SAAoBtG,EAAQ3D,EAAYsJ,GACnE3F,GAAkB,EAClB3D,GAA0B,EACrBsJ,GAAUR,EAAYnF,EAAQ3D,EAAYT,KAAKrB,QAKpD,IAHA,IAAI+C,EAAM1B,KAAKoE,GACXgG,EAAM,EACN3L,EAAI,IACCA,EAAIgC,IAAe2J,GAAO,MACjC1I,GAAO1B,KAAKoE,EAAS3F,GAAK2L,EAM5B,OAFI1I,IAFJ0I,GAAO,OAES1I,GAAO+D,KAAKkF,IAAI,EAAG,EAAIlK,IAEhCiB,GAGTrD,EAAOwB,UAAU+K,UAAY,SAAoBxG,EAAQ3D,EAAYsJ,GACnE3F,GAAkB,EAClB3D,GAA0B,EACrBsJ,GAAUR,EAAYnF,EAAQ3D,EAAYT,KAAKrB,QAKpD,IAHA,IAAIF,EAAIgC,EACJ2J,EAAM,EACN1I,EAAM1B,KAAKoE,IAAW3F,GACnBA,EAAI,IAAM2L,GAAO,MACtB1I,GAAO1B,KAAKoE,IAAW3F,GAAK2L,EAM9B,OAFI1I,IAFJ0I,GAAO,OAES1I,GAAO+D,KAAKkF,IAAI,EAAG,EAAIlK,IAEhCiB,GAGTrD,EAAOwB,UAAUgL,SAAW,SAAmBzG,EAAQ2F,GAErD,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACtB,IAAfqB,KAAKoE,IAC0B,GAA5B,IAAOpE,KAAKoE,GAAU,GADKpE,KAAKoE,IAI3C/F,EAAOwB,UAAUiL,YAAc,SAAsB1G,EAAQ2F,GACtDA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QAC3C,IAAI+C,EAAM1B,KAAKoE,GAAWpE,KAAKoE,EAAS,IAAM,EAC9C,OAAc,MAAN1C,EAAsB,WAANA,EAAmBA,GAG7CrD,EAAOwB,UAAUkL,YAAc,SAAsB3G,EAAQ2F,GACtDA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QAC3C,IAAI+C,EAAM1B,KAAKoE,EAAS,GAAMpE,KAAKoE,IAAW,EAC9C,OAAc,MAAN1C,EAAsB,WAANA,EAAmBA,GAG7CrD,EAAOwB,UAAUmL,YAAc,SAAsB5G,EAAQ2F,GAG3D,OAFKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QAEnCqB,KAAKoE,GACVpE,KAAKoE,EAAS,IAAM,EACpBpE,KAAKoE,EAAS,IAAM,GACpBpE,KAAKoE,EAAS,IAAM,IAGzB/F,EAAOwB,UAAUoL,YAAc,SAAsB7G,EAAQ2F,GAG3D,OAFKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QAEnCqB,KAAKoE,IAAW,GACrBpE,KAAKoE,EAAS,IAAM,GACpBpE,KAAKoE,EAAS,IAAM,EACpBpE,KAAKoE,EAAS,IAGnB/F,EAAOwB,UAAUqL,YAAc,SAAsB9G,EAAQ2F,GAE3D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCS,EAAQ0E,KAAK9D,KAAMoE,GAAQ,EAAM,GAAI,IAG9C/F,EAAOwB,UAAUsL,YAAc,SAAsB/G,EAAQ2F,GAE3D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCS,EAAQ0E,KAAK9D,KAAMoE,GAAQ,EAAO,GAAI,IAG/C/F,EAAOwB,UAAUuL,aAAe,SAAuBhH,EAAQ2F,GAE7D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCS,EAAQ0E,KAAK9D,KAAMoE,GAAQ,EAAM,GAAI,IAG9C/F,EAAOwB,UAAUwL,aAAe,SAAuBjH,EAAQ2F,GAE7D,OADKA,GAAUR,EAAYnF,EAAQ,EAAGpE,KAAKrB,QACpCS,EAAQ0E,KAAK9D,KAAMoE,GAAQ,EAAO,GAAI,IAS/C/F,EAAOwB,UAAUyL,YAAc,SAAsBlL,EAAOgE,EAAQ3D,EAAYsJ,IAC9E3J,GAASA,EACTgE,GAAkB,EAClB3D,GAA0B,EACrBsJ,IAEHN,EAASzJ,KAAMI,EAAOgE,EAAQ3D,EADfgF,KAAKkF,IAAI,EAAG,EAAIlK,GAAc,EACO,GAGtD,IAAI2J,EAAM,EACN3L,EAAI,EAER,IADAuB,KAAKoE,GAAkB,IAARhE,IACN3B,EAAIgC,IAAe2J,GAAO,MACjCpK,KAAKoE,EAAS3F,GAAM2B,EAAQgK,EAAO,IAGrC,OAAOhG,EAAS3D,GAGlBpC,EAAOwB,UAAU0L,YAAc,SAAsBnL,EAAOgE,EAAQ3D,EAAYsJ,IAC9E3J,GAASA,EACTgE,GAAkB,EAClB3D,GAA0B,EACrBsJ,IAEHN,EAASzJ,KAAMI,EAAOgE,EAAQ3D,EADfgF,KAAKkF,IAAI,EAAG,EAAIlK,GAAc,EACO,GAGtD,IAAIhC,EAAIgC,EAAa,EACjB2J,EAAM,EAEV,IADApK,KAAKoE,EAAS3F,GAAa,IAAR2B,IACV3B,GAAK,IAAM2L,GAAO,MACzBpK,KAAKoE,EAAS3F,GAAM2B,EAAQgK,EAAO,IAGrC,OAAOhG,EAAS3D,GAGlBpC,EAAOwB,UAAU2L,WAAa,SAAqBpL,EAAOgE,EAAQ2F,GAMhE,OALA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,IAAM,GACjD/F,EAAOkB,sBAAqBa,EAAQqF,KAAKgG,MAAMrL,IACpDJ,KAAKoE,GAAmB,IAARhE,EACTgE,EAAS,GAWlB/F,EAAOwB,UAAU6L,cAAgB,SAAwBtL,EAAOgE,EAAQ2F,GAUtE,OATA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,MAAQ,GACpD/F,EAAOkB,qBACTS,KAAKoE,GAAmB,IAARhE,EAChBJ,KAAKoE,EAAS,GAAMhE,IAAU,GAE9BsJ,EAAkB1J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAU8L,cAAgB,SAAwBvL,EAAOgE,EAAQ2F,GAUtE,OATA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,MAAQ,GACpD/F,EAAOkB,qBACTS,KAAKoE,GAAWhE,IAAU,EAC1BJ,KAAKoE,EAAS,GAAc,IAARhE,GAEpBsJ,EAAkB1J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAUlB/F,EAAOwB,UAAU+L,cAAgB,SAAwBxL,EAAOgE,EAAQ2F,GAYtE,OAXA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,WAAY,GACxD/F,EAAOkB,qBACTS,KAAKoE,EAAS,GAAMhE,IAAU,GAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,GAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,EAC9BJ,KAAKoE,GAAmB,IAARhE,GAEhBwJ,EAAkB5J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAUgM,cAAgB,SAAwBzL,EAAOgE,EAAQ2F,GAYtE,OAXA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,WAAY,GACxD/F,EAAOkB,qBACTS,KAAKoE,GAAWhE,IAAU,GAC1BJ,KAAKoE,EAAS,GAAMhE,IAAU,GAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,EAC9BJ,KAAKoE,EAAS,GAAc,IAARhE,GAEpBwJ,EAAkB5J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAUiM,WAAa,SAAqB1L,EAAOgE,EAAQ3D,EAAYsJ,GAG5E,GAFA3J,GAASA,EACTgE,GAAkB,GACb2F,EAAU,CACb,IAAIgC,EAAQtG,KAAKkF,IAAI,EAAG,EAAIlK,EAAa,GAEzCgJ,EAASzJ,KAAMI,EAAOgE,EAAQ3D,EAAYsL,EAAQ,GAAIA,GAGxD,IAAItN,EAAI,EACJ2L,EAAM,EACN4B,EAAM,EAEV,IADAhM,KAAKoE,GAAkB,IAARhE,IACN3B,EAAIgC,IAAe2J,GAAO,MAC7BhK,EAAQ,GAAa,IAAR4L,GAAsC,IAAzBhM,KAAKoE,EAAS3F,EAAI,KAC9CuN,EAAM,GAERhM,KAAKoE,EAAS3F,IAAO2B,EAAQgK,GAAQ,GAAK4B,EAAM,IAGlD,OAAO5H,EAAS3D,GAGlBpC,EAAOwB,UAAUoM,WAAa,SAAqB7L,EAAOgE,EAAQ3D,EAAYsJ,GAG5E,GAFA3J,GAASA,EACTgE,GAAkB,GACb2F,EAAU,CACb,IAAIgC,EAAQtG,KAAKkF,IAAI,EAAG,EAAIlK,EAAa,GAEzCgJ,EAASzJ,KAAMI,EAAOgE,EAAQ3D,EAAYsL,EAAQ,GAAIA,GAGxD,IAAItN,EAAIgC,EAAa,EACjB2J,EAAM,EACN4B,EAAM,EAEV,IADAhM,KAAKoE,EAAS3F,GAAa,IAAR2B,IACV3B,GAAK,IAAM2L,GAAO,MACrBhK,EAAQ,GAAa,IAAR4L,GAAsC,IAAzBhM,KAAKoE,EAAS3F,EAAI,KAC9CuN,EAAM,GAERhM,KAAKoE,EAAS3F,IAAO2B,EAAQgK,GAAQ,GAAK4B,EAAM,IAGlD,OAAO5H,EAAS3D,GAGlBpC,EAAOwB,UAAUqM,UAAY,SAAoB9L,EAAOgE,EAAQ2F,GAO9D,OANA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,KAAO,KAClD/F,EAAOkB,sBAAqBa,EAAQqF,KAAKgG,MAAMrL,IAChDA,EAAQ,IAAGA,EAAQ,IAAOA,EAAQ,GACtCJ,KAAKoE,GAAmB,IAARhE,EACTgE,EAAS,GAGlB/F,EAAOwB,UAAUsM,aAAe,SAAuB/L,EAAOgE,EAAQ2F,GAUpE,OATA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,OAAS,OACrD/F,EAAOkB,qBACTS,KAAKoE,GAAmB,IAARhE,EAChBJ,KAAKoE,EAAS,GAAMhE,IAAU,GAE9BsJ,EAAkB1J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAUuM,aAAe,SAAuBhM,EAAOgE,EAAQ2F,GAUpE,OATA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,OAAS,OACrD/F,EAAOkB,qBACTS,KAAKoE,GAAWhE,IAAU,EAC1BJ,KAAKoE,EAAS,GAAc,IAARhE,GAEpBsJ,EAAkB1J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAUwM,aAAe,SAAuBjM,EAAOgE,EAAQ2F,GAYpE,OAXA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,YAAa,YACzD/F,EAAOkB,qBACTS,KAAKoE,GAAmB,IAARhE,EAChBJ,KAAKoE,EAAS,GAAMhE,IAAU,EAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,GAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,IAE9BwJ,EAAkB5J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAGlB/F,EAAOwB,UAAUyM,aAAe,SAAuBlM,EAAOgE,EAAQ2F,GAapE,OAZA3J,GAASA,EACTgE,GAAkB,EACb2F,GAAUN,EAASzJ,KAAMI,EAAOgE,EAAQ,EAAG,YAAa,YACzDhE,EAAQ,IAAGA,EAAQ,WAAaA,EAAQ,GACxC/B,EAAOkB,qBACTS,KAAKoE,GAAWhE,IAAU,GAC1BJ,KAAKoE,EAAS,GAAMhE,IAAU,GAC9BJ,KAAKoE,EAAS,GAAMhE,IAAU,EAC9BJ,KAAKoE,EAAS,GAAc,IAARhE,GAEpBwJ,EAAkB5J,KAAMI,EAAOgE,GAAQ,GAElCA,EAAS,GAgBlB/F,EAAOwB,UAAU0M,aAAe,SAAuBnM,EAAOgE,EAAQ2F,GACpE,OAAOD,EAAW9J,KAAMI,EAAOgE,GAAQ,EAAM2F,IAG/C1L,EAAOwB,UAAU2M,aAAe,SAAuBpM,EAAOgE,EAAQ2F,GACpE,OAAOD,EAAW9J,KAAMI,EAAOgE,GAAQ,EAAO2F,IAWhD1L,EAAOwB,UAAU4M,cAAgB,SAAwBrM,EAAOgE,EAAQ2F,GACtE,OAAOC,EAAYhK,KAAMI,EAAOgE,GAAQ,EAAM2F,IAGhD1L,EAAOwB,UAAU6M,cAAgB,SAAwBtM,EAAOgE,EAAQ2F,GACtE,OAAOC,EAAYhK,KAAMI,EAAOgE,GAAQ,EAAO2F,IAIjD1L,EAAOwB,UAAU2B,KAAO,SAAekH,EAAQiE,EAAapK,EAAOC,GAQjE,GAPKD,IAAOA,EAAQ,GACfC,GAAe,IAARA,IAAWA,EAAMxC,KAAKrB,QAC9BgO,GAAejE,EAAO/J,SAAQgO,EAAcjE,EAAO/J,QAClDgO,IAAaA,EAAc,GAC5BnK,EAAM,GAAKA,EAAMD,IAAOC,EAAMD,GAG9BC,IAAQD,EAAO,OAAO,EAC1B,GAAsB,IAAlBmG,EAAO/J,QAAgC,IAAhBqB,KAAKrB,OAAc,OAAO,EAGrD,GAAIgO,EAAc,EAChB,MAAM,IAAIjN,WAAW,6BAEvB,GAAI6C,EAAQ,GAAKA,GAASvC,KAAKrB,OAAQ,MAAM,IAAIe,WAAW,6BAC5D,GAAI8C,EAAM,EAAG,MAAM,IAAI9C,WAAW,2BAG9B8C,EAAMxC,KAAKrB,SAAQ6D,EAAMxC,KAAKrB,QAC9B+J,EAAO/J,OAASgO,EAAcnK,EAAMD,IACtCC,EAAMkG,EAAO/J,OAASgO,EAAcpK,GAGtC,IACI9D,EADA6C,EAAMkB,EAAMD,EAGhB,GAAIvC,OAAS0I,GAAUnG,EAAQoK,GAAeA,EAAcnK,EAE1D,IAAK/D,EAAI6C,EAAM,EAAG7C,GAAK,IAAKA,EAC1BiK,EAAOjK,EAAIkO,GAAe3M,KAAKvB,EAAI8D,QAEhC,GAAIjB,EAAM,MAASjD,EAAOkB,oBAE/B,IAAKd,EAAI,EAAGA,EAAI6C,IAAO7C,EACrBiK,EAAOjK,EAAIkO,GAAe3M,KAAKvB,EAAI8D,QAGrC5C,WAAWE,UAAU+M,IAAIrJ,KACvBmF,EACA1I,KAAK6G,SAAStE,EAAOA,EAAQjB,GAC7BqL,GAIJ,OAAOrL,GAOTjD,EAAOwB,UAAU0H,KAAO,SAAe7F,EAAKa,EAAOC,EAAK1B,GAEtD,GAAmB,kBAARY,EAAkB,CAS3B,GARqB,kBAAVa,GACTzB,EAAWyB,EACXA,EAAQ,EACRC,EAAMxC,KAAKrB,QACa,kBAAR6D,IAChB1B,EAAW0B,EACXA,EAAMxC,KAAKrB,QAEM,IAAf+C,EAAI/C,OAAc,CACpB,IAAIkO,EAAOnL,EAAI7C,WAAW,GACtBgO,EAAO,MACTnL,EAAMmL,GAGV,QAAiBnM,IAAbI,GAA8C,kBAAbA,EACnC,MAAM,IAAIT,UAAU,6BAEtB,GAAwB,kBAAbS,IAA0BzC,EAAO0C,WAAWD,GACrD,MAAM,IAAIT,UAAU,qBAAuBS,OAErB,kBAARY,IAChBA,GAAY,KAId,GAAIa,EAAQ,GAAKvC,KAAKrB,OAAS4D,GAASvC,KAAKrB,OAAS6D,EACpD,MAAM,IAAI9C,WAAW,sBAGvB,GAAI8C,GAAOD,EACT,OAAOvC,KAQT,IAAIvB,EACJ,GANA8D,KAAkB,EAClBC,OAAc9B,IAAR8B,EAAoBxC,KAAKrB,OAAS6D,IAAQ,EAE3Cd,IAAKA,EAAM,GAGG,kBAARA,EACT,IAAKjD,EAAI8D,EAAO9D,EAAI+D,IAAO/D,EACzBuB,KAAKvB,GAAKiD,MAEP,CACL,IAAI4H,EAAQjL,EAAOgD,SAASK,GACxBA,EACAS,EAAY,IAAI9D,EAAOqD,EAAKZ,GAAUkB,YACtCV,EAAMgI,EAAM3K,OAChB,IAAKF,EAAI,EAAGA,EAAI+D,EAAMD,IAAS9D,EAC7BuB,KAAKvB,EAAI8D,GAAS+G,EAAM7K,EAAI6C,GAIhC,OAAOtB,MAMT,IAAI8M,EAAoB,qBAmBxB,SAASzD,EAAOpL,GACd,OAAIA,EAAI,GAAW,IAAMA,EAAE+D,SAAS,IAC7B/D,EAAE+D,SAAS,IAGpB,SAASG,EAAatB,EAAQuE,GAE5B,IAAIa,EADJb,EAAQA,GAAS2H,IAMjB,IAJA,IAAIpO,EAASkC,EAAOlC,OAChBqO,EAAgB,KAChB1D,EAAQ,GAEH7K,EAAI,EAAGA,EAAIE,IAAUF,EAAG,CAI/B,IAHAwH,EAAYpF,EAAOhC,WAAWJ,IAGd,OAAUwH,EAAY,MAAQ,CAE5C,IAAK+G,EAAe,CAElB,GAAI/G,EAAY,MAAQ,EAEjBb,GAAS,IAAM,GAAGkE,EAAMvE,KAAK,IAAM,IAAM,KAC9C,SACK,GAAItG,EAAI,IAAME,EAAQ,EAEtByG,GAAS,IAAM,GAAGkE,EAAMvE,KAAK,IAAM,IAAM,KAC9C,SAIFiI,EAAgB/G,EAEhB,SAIF,GAAIA,EAAY,MAAQ,EACjBb,GAAS,IAAM,GAAGkE,EAAMvE,KAAK,IAAM,IAAM,KAC9CiI,EAAgB/G,EAChB,SAIFA,EAAkE,OAArD+G,EAAgB,OAAU,GAAK/G,EAAY,YAC/C+G,IAEJ5H,GAAS,IAAM,GAAGkE,EAAMvE,KAAK,IAAM,IAAM,KAMhD,GAHAiI,EAAgB,KAGZ/G,EAAY,IAAM,CACpB,IAAKb,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KAAKkB,QACN,GAAIA,EAAY,KAAO,CAC5B,IAAKb,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJkB,GAAa,EAAM,IACP,GAAZA,EAAmB,UAEhB,GAAIA,EAAY,MAAS,CAC9B,IAAKb,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJkB,GAAa,GAAM,IACnBA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,SAEhB,MAAIA,EAAY,SASrB,MAAM,IAAIhG,MAAM,sBARhB,IAAKmF,GAAS,GAAK,EAAG,MACtBkE,EAAMvE,KACJkB,GAAa,GAAO,IACpBA,GAAa,GAAM,GAAO,IAC1BA,GAAa,EAAM,GAAO,IACd,GAAZA,EAAmB,MAOzB,OAAOqD,EA4BT,SAASlH,EAAetD,GACtB,OAAOI,EAAO+N,YAhIhB,SAAsBnO,GAIpB,IAFAA,EAUF,SAAqBA,GACnB,OAAIA,EAAIoO,KAAapO,EAAIoO,OAClBpO,EAAIqO,QAAQ,aAAc,IAZ3BC,CAAWtO,GAAKqO,QAAQL,EAAmB,KAEzCnO,OAAS,EAAG,MAAO,GAE3B,KAAOG,EAAIH,OAAS,IAAM,GACxBG,GAAY,IAEd,OAAOA,EAuHmBuO,CAAYvO,IAGxC,SAAS8F,EAAY0I,EAAKC,EAAKnJ,EAAQzF,GACrC,IAAK,IAAIF,EAAI,EAAGA,EAAIE,KACbF,EAAI2F,GAAUmJ,EAAI5O,QAAYF,GAAK6O,EAAI3O,UADhBF,EAE5B8O,EAAI9O,EAAI2F,GAAUkJ,EAAI7O,GAExB,OAAOA,K,mDCrvDTQ,EAAQwB,WAuCR,SAAqB+M,GACnB,IAAIC,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAC3B,OAAuC,GAA9BE,EAAWC,GAAuB,EAAKA,GA1ClD3O,EAAQgO,YAiDR,SAAsBO,GACpB,IAAIK,EAcApP,EAbAgP,EAAOC,EAAQF,GACfG,EAAWF,EAAK,GAChBG,EAAkBH,EAAK,GAEvBhK,EAAM,IAAIqK,EAVhB,SAAsBN,EAAKG,EAAUC,GACnC,OAAuC,GAA9BD,EAAWC,GAAuB,EAAKA,EAS9BG,CAAYP,EAAKG,EAAUC,IAEzCI,EAAU,EAGV1M,EAAMsM,EAAkB,EACxBD,EAAW,EACXA,EAGJ,IAAKlP,EAAI,EAAGA,EAAI6C,EAAK7C,GAAK,EACxBoP,EACGI,EAAUT,EAAI3O,WAAWJ,KAAO,GAChCwP,EAAUT,EAAI3O,WAAWJ,EAAI,KAAO,GACpCwP,EAAUT,EAAI3O,WAAWJ,EAAI,KAAO,EACrCwP,EAAUT,EAAI3O,WAAWJ,EAAI,IAC/BgF,EAAIuK,KAAcH,GAAO,GAAM,IAC/BpK,EAAIuK,KAAcH,GAAO,EAAK,IAC9BpK,EAAIuK,KAAmB,IAANH,EAGK,IAApBD,IACFC,EACGI,EAAUT,EAAI3O,WAAWJ,KAAO,EAChCwP,EAAUT,EAAI3O,WAAWJ,EAAI,KAAO,EACvCgF,EAAIuK,KAAmB,IAANH,GAGK,IAApBD,IACFC,EACGI,EAAUT,EAAI3O,WAAWJ,KAAO,GAChCwP,EAAUT,EAAI3O,WAAWJ,EAAI,KAAO,EACpCwP,EAAUT,EAAI3O,WAAWJ,EAAI,KAAO,EACvCgF,EAAIuK,KAAcH,GAAO,EAAK,IAC9BpK,EAAIuK,KAAmB,IAANH,GAGnB,OAAOpK,GA3FTxE,EAAQuG,cAkHR,SAAwB0I,GAQtB,IAPA,IAAIL,EACAvM,EAAM4M,EAAMvP,OACZwP,EAAa7M,EAAM,EACnB8M,EAAQ,GACRC,EAAiB,MAGZ5P,EAAI,EAAG6P,EAAOhN,EAAM6M,EAAY1P,EAAI6P,EAAM7P,GAAK4P,EACtDD,EAAMrJ,KAAKwJ,EAAYL,EAAOzP,EAAIA,EAAI4P,EAAkBC,EAAOA,EAAQ7P,EAAI4P,IAI1D,IAAfF,GACFN,EAAMK,EAAM5M,EAAM,GAClB8M,EAAMrJ,KACJyJ,EAAOX,GAAO,GACdW,EAAQX,GAAO,EAAK,IACpB,OAEsB,IAAfM,IACTN,GAAOK,EAAM5M,EAAM,IAAM,GAAK4M,EAAM5M,EAAM,GAC1C8M,EAAMrJ,KACJyJ,EAAOX,GAAO,IACdW,EAAQX,GAAO,EAAK,IACpBW,EAAQX,GAAO,EAAK,IACpB,MAIJ,OAAOO,EAAM3F,KAAK,KAzIpB,IALA,IAAI+F,EAAS,GACTP,EAAY,GACZH,EAA4B,qBAAfnO,WAA6BA,WAAa3B,MAEvD6O,EAAO,mEACFpO,EAAI,EAAG6C,EAAMuL,EAAKlO,OAAQF,EAAI6C,IAAO7C,EAC5C+P,EAAO/P,GAAKoO,EAAKpO,GACjBwP,EAAUpB,EAAKhO,WAAWJ,IAAMA,EAQlC,SAASiP,EAASF,GAChB,IAAIlM,EAAMkM,EAAI7O,OAEd,GAAI2C,EAAM,EAAI,EACZ,MAAM,IAAIrB,MAAM,kDAKlB,IAAI0N,EAAWH,EAAIlK,QAAQ,KAO3B,OANkB,IAAdqK,IAAiBA,EAAWrM,GAMzB,CAACqM,EAJcA,IAAarM,EAC/B,EACA,EAAKqM,EAAW,GAsEtB,SAASY,EAAaL,EAAO3L,EAAOC,GAGlC,IAFA,IAAIqL,EARoBY,EASpBC,EAAS,GACJjQ,EAAI8D,EAAO9D,EAAI+D,EAAK/D,GAAK,EAChCoP,GACIK,EAAMzP,IAAM,GAAM,WAClByP,EAAMzP,EAAI,IAAM,EAAK,QACP,IAAfyP,EAAMzP,EAAI,IACbiQ,EAAO3J,KAdFyJ,GADiBC,EAeMZ,IAdT,GAAK,IACxBW,EAAOC,GAAO,GAAK,IACnBD,EAAOC,GAAO,EAAI,IAClBD,EAAa,GAANC,IAaT,OAAOC,EAAOjG,KAAK,IAjGrBwF,EAAU,IAAIpP,WAAW,IAAM,GAC/BoP,EAAU,IAAIpP,WAAW,IAAM,I,kBClB/BI,EAAQ6E,KAAO,SAAUrC,EAAQ2C,EAAQuK,EAAMC,EAAMC,GACnD,IAAI/H,EAAG7D,EACH6L,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTxQ,EAAIkQ,EAAQE,EAAS,EAAK,EAC1B9P,EAAI4P,GAAQ,EAAI,EAChBO,EAAIzN,EAAO2C,EAAS3F,GAOxB,IALAA,GAAKM,EAEL+H,EAAIoI,GAAM,IAAOD,GAAU,EAC3BC,KAAQD,EACRA,GAASH,EACFG,EAAQ,EAAGnI,EAAS,IAAJA,EAAWrF,EAAO2C,EAAS3F,GAAIA,GAAKM,EAAGkQ,GAAS,GAKvE,IAHAhM,EAAI6D,GAAM,IAAOmI,GAAU,EAC3BnI,KAAQmI,EACRA,GAASL,EACFK,EAAQ,EAAGhM,EAAS,IAAJA,EAAWxB,EAAO2C,EAAS3F,GAAIA,GAAKM,EAAGkQ,GAAS,GAEvE,GAAU,IAANnI,EACFA,EAAI,EAAIkI,MACH,IAAIlI,IAAMiI,EACf,OAAO9L,EAAIkM,IAAsBpC,KAAdmC,GAAK,EAAI,GAE5BjM,GAAQwC,KAAKkF,IAAI,EAAGiE,GACpB9H,GAAQkI,EAEV,OAAQE,GAAK,EAAI,GAAKjM,EAAIwC,KAAKkF,IAAI,EAAG7D,EAAI8H,IAG5C3P,EAAQgC,MAAQ,SAAUQ,EAAQrB,EAAOgE,EAAQuK,EAAMC,EAAMC,GAC3D,IAAI/H,EAAG7D,EAAGlF,EACN+Q,EAAiB,EAATD,EAAcD,EAAO,EAC7BG,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBK,EAAe,KAATR,EAAcnJ,KAAKkF,IAAI,GAAI,IAAMlF,KAAKkF,IAAI,GAAI,IAAM,EAC1DlM,EAAIkQ,EAAO,EAAKE,EAAS,EACzB9P,EAAI4P,EAAO,GAAK,EAChBO,EAAI9O,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQqF,KAAK4J,IAAIjP,GAEbgD,MAAMhD,IAAUA,IAAU2M,KAC5B9J,EAAIG,MAAMhD,GAAS,EAAI,EACvB0G,EAAIiI,IAEJjI,EAAIrB,KAAKgG,MAAMhG,KAAK6J,IAAIlP,GAASqF,KAAK8J,KAClCnP,GAASrC,EAAI0H,KAAKkF,IAAI,GAAI7D,IAAM,IAClCA,IACA/I,GAAK,IAGLqC,GADE0G,EAAIkI,GAAS,EACNI,EAAKrR,EAELqR,EAAK3J,KAAKkF,IAAI,EAAG,EAAIqE,IAEpBjR,GAAK,IACf+I,IACA/I,GAAK,GAGH+I,EAAIkI,GAASD,GACf9L,EAAI,EACJ6D,EAAIiI,GACKjI,EAAIkI,GAAS,GACtB/L,GAAM7C,EAAQrC,EAAK,GAAK0H,KAAKkF,IAAI,EAAGiE,GACpC9H,GAAQkI,IAER/L,EAAI7C,EAAQqF,KAAKkF,IAAI,EAAGqE,EAAQ,GAAKvJ,KAAKkF,IAAI,EAAGiE,GACjD9H,EAAI,IAID8H,GAAQ,EAAGnN,EAAO2C,EAAS3F,GAAS,IAAJwE,EAAUxE,GAAKM,EAAGkE,GAAK,IAAK2L,GAAQ,GAI3E,IAFA9H,EAAKA,GAAK8H,EAAQ3L,EAClB6L,GAAQF,EACDE,EAAO,EAAGrN,EAAO2C,EAAS3F,GAAS,IAAJqI,EAAUrI,GAAKM,EAAG+H,GAAK,IAAKgI,GAAQ,GAE1ErN,EAAO2C,EAAS3F,EAAIM,IAAU,IAAJmQ,I,kBCnF5B,IAAIlN,EAAW,GAAGA,SAElBwN,EAAOvQ,QAAUjB,MAAMqB,SAAW,SAAUoE,GAC1C,MAA6B,kBAAtBzB,EAASuB,KAAKE,K,oBCHvB,IAAIgM,EAAQtQ,EAAQ,KAEpBqQ,EAAOvQ,QASP,SAAwB2C,GACtB,GAAgB,MAAZA,EAAK,GAAa,MAAM,IAAI3B,MAAM,4BACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,4BACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,4BACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,4BACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,iFACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,iFACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,4BACtC,GAAgB,KAAZ2B,EAAK,GAAa,MAAM,IAAI3B,MAAM,iFAEtC,IAAIyP,GAAQ,EACRC,EAAS,GACTC,EAAM,EAEV,KAAOA,EAAMhO,EAAKjD,QAAQ,CAGxBuP,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAGhB,IAAIjR,EAASkR,EAAO,GAAK,EACrBC,EAAQ,IAAInQ,WAAWhB,GAC3BmR,EAAM,GAAKlO,EAAKgO,KAChBE,EAAM,GAAKlO,EAAKgO,KAChBE,EAAM,GAAKlO,EAAKgO,KAChBE,EAAM,GAAKlO,EAAKgO,KAGhB,IAAIG,EACFlM,OAAOwC,aAAayJ,EAAM,IAC1BjM,OAAOwC,aAAayJ,EAAM,IAC1BjM,OAAOwC,aAAayJ,EAAM,IAC1BjM,OAAOwC,aAAayJ,EAAM,IAI5B,IAAKH,EAAOhR,QAAmB,SAAToR,EACpB,MAAM,IAAI9P,MAAM,uBAKlB,GAAa,SAAT8P,EAAiB,CACnBL,GAAQ,EACRC,EAAO5K,KAAK,CACVgL,KAAMA,EACNnO,KAAM,IAAIjC,WAAW,KAGvB,MAIF,IAAK,IAAIlB,EAAI,EAAGA,EAAIE,EAAQF,IAC1BqR,EAAMrR,GAAKmD,EAAKgO,KAKlB1B,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAChB1B,EAAM,GAAKtM,EAAKgO,KAEhB,IAAII,EAAYC,EAAM,GAEtB,GADgBR,EAAMlR,IAAIuR,KACRE,EAChB,MAAM,IAAI/P,MACR,kBAAoB8P,EAAO,sDAM/B,IAAIG,EAAY,IAAIvQ,WAAWmQ,EAAMrO,OAAOP,MAAM,IAElDyO,EAAO5K,KAAK,CACVgL,KAAMA,EACNnO,KAAMsO,IAIV,IAAKR,EACH,MAAM,IAAIzP,MAAM,yDAGlB,OAAO0P,GA7FT,IAAIzB,EAAQ,IAAIvO,WAAW,GACvBsQ,EAAQ,IAAI/R,WAAWgQ,EAAMzM,QAC7BoO,EAAS,IAAIM,YAAYjC,EAAMzM","file":"static/js/6.fb71e719.chunk.js","sourcesContent":["/* crc32.js (C) 2014-2015 SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\nvar CRC32;\n(function (factory) {\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t  factory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n}(function(CRC32) {\nCRC32.version = '0.3.0';\n/* see perf/crc32table.js */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar table = signed_crc_table();\n/* charCodeAt is the best approach for binary strings */\nvar use_buffer = typeof Buffer !== 'undefined';\nfunction crc32_bstr(bstr) {\n\tif(bstr.length > 32768) if(use_buffer) return crc32_buf_8(new Buffer(bstr));\n\tvar crc = -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t\tcrc =  table[(crc ^ bstr.charCodeAt(i++)) & 0xFF] ^ (crc >>> 8);\n\t}\n\tif(i === L) crc = (crc >>> 8) ^ table[(crc ^ bstr.charCodeAt(i)) & 0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf(buf) {\n\tif(buf.length > 10000) return crc32_buf_8(buf);\n\tfor(var crc = -1, i = 0, L=buf.length-3; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\nfunction crc32_buf_8(buf) {\n\tfor(var crc = -1, i = 0, L=buf.length-7; i < L;) {\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t\tcrc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) crc = (crc >>> 8) ^ table[(crc^buf[i++])&0xFF];\n\treturn crc ^ -1;\n}\n\n/* much much faster to intertwine utf8 and crc */\nfunction crc32_str(str) {\n\tfor(var crc = -1, i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ c) & 0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (192|((c>>6)&31))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++) & 1023;\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (240|((c>>8)&7))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>2)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((d>>6)&15)|(c&3))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(d&63))) & 0xFF];\n\t\t} else {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (224|((c>>12)&15))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|((c>>6)&63))) & 0xFF];\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ (128|(c&63))) & 0xFF];\n\t\t}\n\t}\n\treturn crc ^ -1;\n}\nCRC32.table = table;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var crc32 = require('crc-32')\n\nmodule.exports = extractChunks\n\n// Used for fast-ish conversion between uint8s and uint32s/int32s.\n// Also required in order to remain agnostic for both Node Buffers and\n// Uint8Arrays.\nvar uint8 = new Uint8Array(4)\nvar int32 = new Int32Array(uint8.buffer)\nvar uint32 = new Uint32Array(uint8.buffer)\n\nfunction extractChunks (data) {\n  if (data[0] !== 0x89) throw new Error('Invalid .png file header')\n  if (data[1] !== 0x50) throw new Error('Invalid .png file header')\n  if (data[2] !== 0x4E) throw new Error('Invalid .png file header')\n  if (data[3] !== 0x47) throw new Error('Invalid .png file header')\n  if (data[4] !== 0x0D) throw new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?')\n  if (data[5] !== 0x0A) throw new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?')\n  if (data[6] !== 0x1A) throw new Error('Invalid .png file header')\n  if (data[7] !== 0x0A) throw new Error('Invalid .png file header: possibly caused by DOS-Unix line ending conversion?')\n\n  var ended = false\n  var chunks = []\n  var idx = 8\n\n  while (idx < data.length) {\n    // Read the length of the current chunk,\n    // which is stored as a Uint32.\n    uint8[3] = data[idx++]\n    uint8[2] = data[idx++]\n    uint8[1] = data[idx++]\n    uint8[0] = data[idx++]\n\n    // Chunk includes name/type for CRC check (see below).\n    var length = uint32[0] + 4\n    var chunk = new Uint8Array(length)\n    chunk[0] = data[idx++]\n    chunk[1] = data[idx++]\n    chunk[2] = data[idx++]\n    chunk[3] = data[idx++]\n\n    // Get the name in ASCII for identification.\n    var name = (\n      String.fromCharCode(chunk[0]) +\n      String.fromCharCode(chunk[1]) +\n      String.fromCharCode(chunk[2]) +\n      String.fromCharCode(chunk[3])\n    )\n\n    // The IHDR header MUST come first.\n    if (!chunks.length && name !== 'IHDR') {\n      throw new Error('IHDR header missing')\n    }\n\n    // The IEND header marks the end of the file,\n    // so on discovering it break out of the loop.\n    if (name === 'IEND') {\n      ended = true\n      chunks.push({\n        name: name,\n        data: new Uint8Array(0)\n      })\n\n      break\n    }\n\n    // Read the contents of the chunk out of the main buffer.\n    for (var i = 4; i < length; i++) {\n      chunk[i] = data[idx++]\n    }\n\n    // Read out the CRC value for comparison.\n    // It's stored as an Int32.\n    uint8[3] = data[idx++]\n    uint8[2] = data[idx++]\n    uint8[1] = data[idx++]\n    uint8[0] = data[idx++]\n\n    var crcActual = int32[0]\n    var crcExpect = crc32.buf(chunk)\n    if (crcExpect !== crcActual) {\n      throw new Error(\n        'CRC values for ' + name + ' header do not match, PNG file is likely corrupted'\n      )\n    }\n\n    // The chunk data is now copied to remove the 4 preceding\n    // bytes used for the chunk name/type.\n    var chunkData = new Uint8Array(chunk.buffer.slice(4))\n\n    chunks.push({\n      name: name,\n      data: chunkData\n    })\n  }\n\n  if (!ended) {\n    throw new Error('.png file ended prematurely: no IEND header was found')\n  }\n\n  return chunks\n}\n"],"sourceRoot":""}