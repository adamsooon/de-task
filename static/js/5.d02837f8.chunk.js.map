{"version":3,"sources":["../node_modules/blueimp-load-image/js/load-image.js","../node_modules/blueimp-load-image/js/load-image-meta.js","../node_modules/blueimp-load-image/js/load-image-scale.js","../node_modules/blueimp-load-image/js/load-image-exif.js","../node_modules/blueimp-load-image/js/load-image-fetch.js","../node_modules/blueimp-load-image/js/load-image-exif-map.js","../node_modules/blueimp-load-image/js/load-image-orientation.js","../node_modules/blueimp-load-image/js/index.js"],"names":["$","loadImage","file","callback","options","url","img","document","createElement","onerror","event","onload","fetchBlob","blob","createObjectURL","crossOrigin","src","isInstanceOf","_objectURL","readFile","e","target","result","urlAPI","URL","revokeObjectURL","webkitURL","revokeHelper","noRevoke","type","obj","Object","prototype","toString","call","transform","data","method","FileReader","fileReader","define","window","this","factory","hasblobSlice","Blob","slice","webkitSlice","mozSlice","blobSlice","apply","arguments","metaDataParsers","jpeg","parseMetaData","that","maxMetaDataSize","DataView","size","error","console","log","markerBytes","markerLength","parsers","i","buffer","dataView","offset","maxOffset","byteLength","headLength","getUint16","length","disableImageHead","imageHead","Uint8Array","subarray","hasMetaOption","meta","originalTransform","scale","transformCoordinates","getTransformedOptions","newOptions","width","height","aspectRatio","hasOwnProperty","crop","naturalWidth","naturalHeight","maxWidth","maxHeight","renderImageToCanvas","canvas","sourceX","sourceY","sourceWidth","sourceHeight","destX","destY","destWidth","destHeight","getContext","drawImage","hasCanvasOption","minWidth","minHeight","pixelRatio","downsamplingRatio","tmp","useCanvas","scaleUp","Math","max","scaleDown","min","left","top","undefined","right","bottom","contain","cover","style","ExifMap","map","Orientation","get","id","getExifThumbnail","exifTagTypes","1","getValue","dataOffset","getUint8","2","String","fromCharCode","ascii","3","littleEndian","4","getUint32","5","9","getInt32","10","getExifValue","tiffOffset","tagSize","values","str","c","tagType","parseExifTag","tag","exif","parseExifTags","dirOffset","tagsNumber","dirEndOffset","parseExifData","disableExif","thumbnailData","disableExifThumbnail","Thumbnail","disableExifSub","disableExifGps","push","fetch","Request","then","response","catch","err","tags","0","stringValues","ExposureProgram","6","7","8","MeteringMode","255","LightSource","11","12","13","14","15","17","18","19","20","21","22","23","24","Flash","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","ComponentsConfiguration","getText","value","exifMapPrototype","prop","getAll","originalHasCanvasOption","originalHasMetaOption","originalTransformCoordinates","originalGetTransformedOptions","orientation","ctx","styleWidth","styleHeight","translate","rotate","PI","opts","module","exports","require"],"mappings":"6FAAA,OAaC,SAAWA,GACV,aAKA,SAASC,EAAWC,EAAMC,EAAUC,GAClC,IACIC,EADAC,EAAMC,SAASC,cAAc,OAQjC,OANAF,EAAIG,QAAU,SAAUC,GACtB,OAAOT,EAAUQ,QAAQH,EAAKI,EAAOR,EAAMC,EAAUC,IAEvDE,EAAIK,OAAS,SAAUD,GACrB,OAAOT,EAAUU,OAAOL,EAAKI,EAAOR,EAAMC,EAAUC,IAElC,kBAATF,GACTD,EAAUW,UACRV,GACA,SAAUW,GACJA,GACFX,EAAOW,EACPR,EAAMJ,EAAUa,gBAAgBZ,KAEhCG,EAAMH,EACFE,GAAWA,EAAQW,cACrBT,EAAIS,YAAcX,EAAQW,cAG9BT,EAAIU,IAAMX,IAEZD,GAEKE,GAEPL,EAAUgB,aAAa,OAAQf,IAG/BD,EAAUgB,aAAa,OAAQf,IAE/BG,EAAMC,EAAIY,WAAajB,EAAUa,gBAAgBZ,KAE/CI,EAAIU,IAAMX,EACHC,GAEFL,EAAUkB,SAASjB,GAAM,SAAUkB,GACxC,IAAIC,EAASD,EAAEC,OACXA,GAAUA,EAAOC,OACnBhB,EAAIU,IAAMK,EAAOC,OACRnB,GACTA,EAASiB,WAhBR,EAuBT,IAAIG,EACDvB,EAAEc,iBAAmBd,GACrBA,EAAEwB,KAAOA,IAAIC,iBAAmBD,KAChCxB,EAAE0B,WAAaA,UAElB,SAASC,EAAcrB,EAAKF,IACtBE,EAAIY,YAAgBd,GAAWA,EAAQwB,WACzC3B,EAAUwB,gBAAgBnB,EAAIY,mBACvBZ,EAAIY,YAOfjB,EAAUW,UAAY,SAAUP,EAAKF,EAAUC,GAC7CD,KAGFF,EAAUgB,aAAe,SAAUY,EAAMC,GAEvC,OAAOC,OAAOC,UAAUC,SAASC,KAAKJ,KAAS,WAAaD,EAAO,KAGrE5B,EAAUkC,UAAY,SAAU7B,EAAKF,EAASD,EAAUD,EAAMkC,GAC5DjC,EAASG,EAAK8B,IAGhBnC,EAAUQ,QAAU,SAAUH,EAAKI,EAAOR,EAAMC,EAAUC,GACxDuB,EAAarB,EAAKF,GACdD,GACFA,EAAS+B,KAAK5B,EAAKI,IAIvBT,EAAUU,OAAS,SAAUL,EAAKI,EAAOR,EAAMC,EAAUC,GACvDuB,EAAarB,EAAKF,GACdD,GACFF,EAAUkC,UAAU7B,EAAKF,EAASD,EAAUD,EAAM,KAItDD,EAAUa,gBAAkB,SAAUZ,GACpC,QAAOqB,GAASA,EAAOT,gBAAgBZ,IAGzCD,EAAUwB,gBAAkB,SAAUpB,GACpC,QAAOkB,GAASA,EAAOE,gBAAgBpB,IAMzCJ,EAAUkB,SAAW,SAAUjB,EAAMC,EAAUkC,GAC7C,GAAIrC,EAAEsC,WAAY,CAChB,IAAIC,EAAa,IAAID,WAGrB,GAFAC,EAAW5B,OAAS4B,EAAW9B,QAAUN,EAErCoC,EADJF,EAASA,GAAU,iBAGjB,OADAE,EAAWF,GAAQnC,GACZqC,EAGX,OAAO,QAID,KAANC,aACE,OAAOvC,GADH,8BA3HT,CAmIqB,qBAAXwC,QAA0BA,QAAWC,O,oBChJhD,WAiBC,SAAWC,GACV,aAGEH,EAAO,CAAC,aAAF,6BAOP,SAAUvC,GAGX,IAAI2C,EACc,qBAATC,OACNA,KAAKb,UAAUc,OACdD,KAAKb,UAAUe,aACfF,KAAKb,UAAUgB,UAEnB/C,EAAUgD,UACRL,GACA,WAEE,OADYF,KAAKI,OAASJ,KAAKK,aAAeL,KAAKM,UACtCE,MAAMR,KAAMS,YAG7BlD,EAAUmD,gBAAkB,CAC1BC,KAAM,CACJ,MAAQ,KAUZpD,EAAUqD,cAAgB,SAAUpD,EAAMC,EAAUC,EAASgC,GAE3DA,EAAOA,GAAQ,GACf,IAAImB,EAAOb,KAEPc,GAJJpD,EAAUA,GAAW,IAISoD,iBAAmB,UAE3B,qBAAbC,UACPvD,GACAA,EAAKwD,MAAQ,IACC,eAAdxD,EAAK2B,MACL5B,EAAUgD,YAIThD,EAAUkB,SACTlB,EAAUgD,UAAUf,KAAKhC,EAAM,EAAGsD,IAClC,SAAUpC,GACR,GAAIA,EAAEC,OAAOsC,MAIX,OAFAC,QAAQC,IAAIzC,EAAEC,OAAOsC,YACrBxD,EAASiC,GAOX,IAKI0B,EACAC,EACAC,EACAC,EARAC,EAAS9C,EAAEC,OAAOC,OAClB6C,EAAW,IAAIV,SAASS,GACxBE,EAAS,EACTC,EAAYF,EAASG,WAAa,EAClCC,EAAaH,EAMjB,GAA8B,QAA1BD,EAASK,UAAU,GAAe,CACpC,KAAOJ,EAASC,KACdP,EAAcK,EAASK,UAAUJ,KAKf,OAAUN,GAAe,OACzB,QAAhBA,IAPuB,CAcvB,GAAIM,GADJL,EAAeI,EAASK,UAAUJ,EAAS,GAAK,GACpBD,EAASG,WAAY,CAC/CV,QAAQC,IAAI,4CACZ,MAGF,GADAG,EAAU/D,EAAUmD,gBAAgBC,KAAKS,GAEvC,IAAKG,EAAI,EAAGA,EAAID,EAAQS,OAAQR,GAAK,EACnCD,EAAQC,GAAG/B,KACTqB,EACAY,EACAC,EACAL,EACA3B,EACAhC,GAKNmE,EADAH,GAAUL,GAUT3D,EAAQsE,kBAAoBH,EAAa,IACxCL,EAAOpB,MACTV,EAAKuC,UAAYT,EAAOpB,MAAM,EAAGyB,GAIjCnC,EAAKuC,UAAY,IAAIC,WAAWV,GAAQW,SAAS,EAAGN,SAIxDX,QAAQC,IAAI,2CAEd1D,EAASiC,KAEX,sBAGFjC,EAASiC,IAKbnC,EAAU6E,cAAgB,SAAU1E,GAClC,OAAOA,GAAWA,EAAQ2E,MAG5B,IAAIC,EAAoB/E,EAAUkC,UAClClC,EAAUkC,UAAY,SAAU7B,EAAKF,EAASD,EAAUD,EAAMkC,GACxDnC,EAAU6E,cAAc1E,GAC1BH,EAAUqD,cACRpD,GACA,SAAUkC,GACR4C,EAAkB9C,KAAKjC,EAAWK,EAAKF,EAASD,EAAUD,EAAMkC,KAElEhC,EACAgC,GAGF4C,EAAkB9B,MAAMjD,EAAWkD,cAzJ/B,+BAJT,I,oBCjBD,WAaC,SAAWR,GACV,aAGEH,EAAO,CAAC,aAAF,6BAOP,SAAUvC,GAGX,IAAI+E,EAAoB/E,EAAUkC,UAElClC,EAAUkC,UAAY,SAAU7B,EAAKF,EAASD,EAAUD,EAAMkC,GAC5D4C,EAAkB9C,KAChBjC,EACAA,EAAUgF,MAAM3E,EAAKF,EAASgC,GAC9BhC,EACAD,EACAD,EACAkC,IAOJnC,EAAUiF,qBAAuB,aAKjCjF,EAAUkF,sBAAwB,SAAU7E,EAAKF,GAC/C,IACIgF,EACAnB,EACAoB,EACAC,EAJAC,EAAcnF,EAAQmF,YAK1B,IAAKA,EACH,OAAOnF,EAGT,IAAK6D,KADLmB,EAAa,GACHhF,EACJA,EAAQoF,eAAevB,KACzBmB,EAAWnB,GAAK7D,EAAQ6D,IAa5B,OAVAmB,EAAWK,MAAO,GAClBJ,EAAQ/E,EAAIoF,cAAgBpF,EAAI+E,QAChCC,EAAShF,EAAIqF,eAAiBrF,EAAIgF,QACbC,GACnBH,EAAWQ,SAAWN,EAASC,EAC/BH,EAAWS,UAAYP,IAEvBF,EAAWQ,SAAWP,EACtBD,EAAWS,UAAYR,EAAQE,GAE1BH,GAITnF,EAAU6F,oBAAsB,SAC9BC,EACAzF,EACA0F,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAeA,OAbAR,EACGS,WAAW,MACXC,UACCnG,EACA0F,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEGR,GAIT9F,EAAUyG,gBAAkB,SAAUtG,GACpC,OAAOA,EAAQ2F,QAAU3F,EAAQqF,QAAUrF,EAAQmF,aAQrDtF,EAAUgF,MAAQ,SAAU3E,EAAKF,EAASgC,GACxChC,EAAUA,GAAW,GACrB,IAQIwF,EACAC,EACAc,EACAC,EACAV,EACAC,EACAH,EACAC,EACAY,EACAC,EACAC,EAlBAhB,EAASxF,SAASC,cAAc,UAChCwG,EACF1G,EAAIkG,YACHvG,EAAUyG,gBAAgBtG,IAAY2F,EAAOS,WAC5CnB,EAAQ/E,EAAIoF,cAAgBpF,EAAI+E,MAChCC,EAAShF,EAAIqF,eAAiBrF,EAAIgF,OAClCgB,EAAYjB,EACZkB,EAAajB,EAYjB,SAAS2B,IACP,IAAIhC,EAAQiC,KAAKC,KACdR,GAAYL,GAAaA,GACzBM,GAAaL,GAAcA,GAE1BtB,EAAQ,IACVqB,GAAarB,EACbsB,GAActB,GAGlB,SAASmC,IACP,IAAInC,EAAQiC,KAAKG,KACdzB,GAAYU,GAAaA,GACzBT,GAAaU,GAAcA,GAE1BtB,EAAQ,IACVqB,GAAarB,EACbsB,GAActB,GA0DlB,GAvDI+B,IAEFhB,GADA5F,EAAUH,EAAUkF,sBAAsB7E,EAAKF,EAASgC,IACtCkF,MAAQ,EAC1BrB,EAAU7F,EAAQmH,KAAO,EACrBnH,EAAQ8F,aACVA,EAAc9F,EAAQ8F,iBACAsB,IAAlBpH,EAAQqH,YAAwCD,IAAjBpH,EAAQkH,OACzCtB,EAAUX,EAAQa,EAAc9F,EAAQqH,QAG1CvB,EAAcb,EAAQW,GAAW5F,EAAQqH,OAAS,GAEhDrH,EAAQ+F,cACVA,EAAe/F,EAAQ+F,kBACAqB,IAAnBpH,EAAQsH,aAAwCF,IAAhBpH,EAAQmH,MAC1CtB,EAAUX,EAASa,EAAe/F,EAAQsH,SAG5CvB,EAAeb,EAASW,GAAW7F,EAAQsH,QAAU,GAEvDpB,EAAYJ,EACZK,EAAaJ,GAEfP,EAAWxF,EAAQwF,SACnBC,EAAYzF,EAAQyF,UACpBc,EAAWvG,EAAQuG,SACnBC,EAAYxG,EAAQwG,UAChBI,GAAapB,GAAYC,GAAazF,EAAQqF,MAChDa,EAAYV,EACZW,EAAaV,GACbkB,EAAMb,EAAcC,EAAeP,EAAWC,GACpC,GACRM,EAAeN,EAAYK,EAAcN,OACrB4B,IAAhBpH,EAAQmH,UAAwCC,IAAnBpH,EAAQsH,SACvCzB,GAAWX,EAASa,GAAgB,IAE7BY,EAAM,IACfb,EAAcN,EAAWO,EAAeN,OACnB2B,IAAjBpH,EAAQkH,WAAwCE,IAAlBpH,EAAQqH,QACxCzB,GAAWX,EAAQa,GAAe,OAIlC9F,EAAQuH,SAAWvH,EAAQwH,SAC7BjB,EAAWf,EAAWA,GAAYe,EAClCC,EAAYf,EAAYA,GAAae,GAEnCxG,EAAQwH,OACVR,IACAH,MAEAA,IACAG,MAGAJ,EAAW,CAUb,IATAH,EAAazG,EAAQyG,YACJ,IACfd,EAAO8B,MAAMxC,MAAQiB,EAAY,KACjCP,EAAO8B,MAAMvC,OAASiB,EAAa,KACnCD,GAAaO,EACbN,GAAcM,EACdd,EAAOS,WAAW,MAAMvB,MAAM4B,EAAYA,KAE5CC,EAAoB1G,EAAQ0G,mBAEN,GACpBA,EAAoB,GACpBR,EAAYJ,GACZK,EAAaJ,EAEb,KAAOD,EAAcY,EAAoBR,GACvCP,EAAOV,MAAQa,EAAcY,EAC7Bf,EAAOT,OAASa,EAAeW,EAC/B7G,EAAU6F,oBACRC,EACAzF,EACA0F,EACAC,EACAC,EACAC,EACA,EACA,EACAJ,EAAOV,MACPU,EAAOT,QAETU,EAAU,EACVC,EAAU,EACVC,EAAcH,EAAOV,MACrBc,EAAeJ,EAAOT,QACtBhF,EAAMC,SAASC,cAAc,WACzB6E,MAAQa,EACZ5F,EAAIgF,OAASa,EACblG,EAAU6F,oBACRxF,EACAyF,EACA,EACA,EACAG,EACAC,EACA,EACA,EACAD,EACAC,GAON,OAHAJ,EAAOV,MAAQiB,EACfP,EAAOT,OAASiB,EAChBtG,EAAUiF,qBAAqBa,EAAQ3F,GAChCH,EAAU6F,oBACfC,EACAzF,EACA0F,EACAC,EACAC,EACAC,EACA,EACA,EACAG,EACAC,GAKJ,OAFAjG,EAAI+E,MAAQiB,EACZhG,EAAIgF,OAASiB,EACNjG,KAxQD,+BAJT,I,oBCbD,WAaC,SAAWqC,GACV,aAGEH,EAAO,CAAC,OAAgB,aAAlB,6BAOP,SAAUvC,GAGXA,EAAU6H,QAAU,WAClB,OAAOpF,MAGTzC,EAAU6H,QAAQ9F,UAAU+F,IAAM,CAChCC,YAAa,KAGf/H,EAAU6H,QAAQ9F,UAAUiG,IAAM,SAAUC,GAC1C,OAAOxF,KAAKwF,IAAOxF,KAAKA,KAAKqF,IAAIG,KAGnCjI,EAAUkI,iBAAmB,SAAUhE,EAAUC,EAAQK,GACvD,GAAKA,KAAUL,EAASK,EAASN,EAASG,YAI1C,OAAOrE,EAAUa,gBACf,IAAI+B,KAAK,CAACsB,EAASD,OAAOpB,MAAMsB,EAAQA,EAASK,MAJjDb,QAAQC,IAAI,+CAQhB5D,EAAUmI,aAAe,CAEvBC,EAAG,CACDC,SAAU,SAAUnE,EAAUoE,GAC5B,OAAOpE,EAASqE,SAASD,IAE3B7E,KAAM,GAGR+E,EAAG,CACDH,SAAU,SAAUnE,EAAUoE,GAC5B,OAAOG,OAAOC,aAAaxE,EAASqE,SAASD,KAE/C7E,KAAM,EACNkF,OAAO,GAGTC,EAAG,CACDP,SAAU,SAAUnE,EAAUoE,EAAYO,GACxC,OAAO3E,EAASK,UAAU+D,EAAYO,IAExCpF,KAAM,GAGRqF,EAAG,CACDT,SAAU,SAAUnE,EAAUoE,EAAYO,GACxC,OAAO3E,EAAS6E,UAAUT,EAAYO,IAExCpF,KAAM,GAGRuF,EAAG,CACDX,SAAU,SAAUnE,EAAUoE,EAAYO,GACxC,OACE3E,EAAS6E,UAAUT,EAAYO,GAC/B3E,EAAS6E,UAAUT,EAAa,EAAGO,IAGvCpF,KAAM,GAGRwF,EAAG,CACDZ,SAAU,SAAUnE,EAAUoE,EAAYO,GACxC,OAAO3E,EAASgF,SAASZ,EAAYO,IAEvCpF,KAAM,GAGR0F,GAAI,CACFd,SAAU,SAAUnE,EAAUoE,EAAYO,GACxC,OACE3E,EAASgF,SAASZ,EAAYO,GAC9B3E,EAASgF,SAASZ,EAAa,EAAGO,IAGtCpF,KAAM,IAIVzD,EAAUmI,aAAa,GAAKnI,EAAUmI,aAAa,GAEnDnI,EAAUoJ,aAAe,SACvBlF,EACAmF,EACAlF,EACAvC,EACA4C,EACAqE,GAEA,IACIS,EACAhB,EACAiB,EACAvF,EACAwF,EACAC,EANAC,EAAU1J,EAAUmI,aAAavG,GAOrC,GAAK8H,EAAL,CAWA,MAJApB,GAHAgB,EAAUI,EAAQjG,KAAOe,GAIb,EACN6E,EAAanF,EAAS6E,UAAU5E,EAAS,EAAG0E,GAC5C1E,EAAS,GACEmF,EAAUpF,EAASG,YAApC,CAIA,GAAe,IAAXG,EACF,OAAOkF,EAAQrB,SAASnE,EAAUoE,EAAYO,GAGhD,IADAU,EAAS,GACJvF,EAAI,EAAGA,EAAIQ,EAAQR,GAAK,EAC3BuF,EAAOvF,GAAK0F,EAAQrB,SAClBnE,EACAoE,EAAatE,EAAI0F,EAAQjG,KACzBoF,GAGJ,GAAIa,EAAQf,MAAO,CAGjB,IAFAa,EAAM,GAEDxF,EAAI,EAAGA,EAAIuF,EAAO/E,QAGX,QAFViF,EAAIF,EAAOvF,IADkBA,GAAK,EAMlCwF,GAAOC,EAET,OAAOD,EAET,OAAOD,EA3BL5F,QAAQC,IAAI,gDAXZD,QAAQC,IAAI,yCAyChB5D,EAAU2J,aAAe,SACvBzF,EACAmF,EACAlF,EACA0E,EACA1G,GAEA,IAAIyH,EAAM1F,EAASK,UAAUJ,EAAQ0E,GACrC1G,EAAK0H,KAAKD,GAAO5J,EAAUoJ,aACzBlF,EACAmF,EACAlF,EACAD,EAASK,UAAUJ,EAAS,EAAG0E,GAC/B3E,EAAS6E,UAAU5E,EAAS,EAAG0E,GAC/BA,IAIJ7I,EAAU8J,cAAgB,SACxB5F,EACAmF,EACAU,EACAlB,EACA1G,GAEA,IAAI6H,EAAYC,EAAcjG,EAC9B,GAAI+F,EAAY,EAAI7F,EAASG,WAC3BV,QAAQC,IAAI,oDADd,CAMA,MADAqG,EAAeF,EAAY,EAAI,IAD/BC,EAAa9F,EAASK,UAAUwF,EAAWlB,KAExB,EAAI3E,EAASG,YAAhC,CAIA,IAAKL,EAAI,EAAGA,EAAIgG,EAAYhG,GAAK,EAC/BvB,KAAKkH,aACHzF,EACAmF,EACAU,EAAY,EAAI,GAAK/F,EACrB6E,EACA1G,GAIJ,OAAO+B,EAAS6E,UAAUkB,EAAcpB,GAbtClF,QAAQC,IAAI,gDAgBhB5D,EAAUkK,cAAgB,SAAUhG,EAAUC,EAAQK,EAAQrC,EAAMhC,GAClE,IAAIA,EAAQgK,YAAZ,CAGA,IACItB,EACAkB,EACAK,EAHAf,EAAalF,EAAS,GAK1B,GAAuC,aAAnCD,EAAS6E,UAAU5E,EAAS,GAIhC,GAAIkF,EAAa,EAAInF,EAASG,WAC5BV,QAAQC,IAAI,iDAId,GAAuC,IAAnCM,EAASK,UAAUJ,EAAS,GAAhC,CAKA,OAAQD,EAASK,UAAU8E,IACzB,KAAK,MACHR,GAAe,EACf,MACF,KAAK,MACHA,GAAe,EACf,MACF,QAEE,YADAlF,QAAQC,IAAI,qDAIyC,KAArDM,EAASK,UAAU8E,EAAa,EAAGR,IAKvCkB,EAAY7F,EAAS6E,UAAUM,EAAa,EAAGR,GAE/C1G,EAAK0H,KAAO,IAAI7J,EAAU6H,SAG1BkC,EAAY/J,EAAU8J,cACpB5F,EACAmF,EACAA,EAAaU,EACblB,EACA1G,MAEgBhC,EAAQkK,uBACxBD,EAAgB,CAAEP,KAAM,IACxBE,EAAY/J,EAAU8J,cACpB5F,EACAmF,EACAA,EAAaU,EACblB,EACAuB,GAGEA,EAAcP,KAAK,OACrB1H,EAAK0H,KAAKS,UAAYtK,EAAUkI,iBAC9BhE,EACAmF,EAAae,EAAcP,KAAK,KAChCO,EAAcP,KAAK,QAKrB1H,EAAK0H,KAAK,SAAY1J,EAAQoK,gBAChCvK,EAAU8J,cACR5F,EACAmF,EACAA,EAAalH,EAAK0H,KAAK,OACvBhB,EACA1G,GAIAA,EAAK0H,KAAK,SAAY1J,EAAQqK,gBAChCxK,EAAU8J,cACR5F,EACAmF,EACAA,EAAalH,EAAK0H,KAAK,OACvBhB,EACA1G,IAnDFwB,QAAQC,IAAI,gDAjBZD,QAAQC,IAAI,uDA0EhB5D,EAAUmD,gBAAgBC,KAAK,OAAQqH,KAAKzK,EAAUkK,iBApS9C,+BAJT,I,oBCbD,WAaC,SAAWxH,GACV,aAGEH,EAAO,CAAC,OAAgB,aAAlB,6BAOP,SAAUvC,GAGU,qBAAV0K,OAA4C,qBAAZC,UACzC3K,EAAUW,UAAY,SAAUP,EAAKF,EAAUC,GAC7C,GAAIH,EAAU6E,cAAc1E,GAC1B,OAAOuK,MAAM,IAAIC,QAAQvK,EAAKD,IAC3ByK,MAAK,SAAUC,GACd,OAAOA,EAASjK,UAEjBgK,KAAK1K,GACL4K,OAAM,SAAUC,GACfpH,QAAQC,IAAImH,GACZ7K,OAGJA,QAvBE,+BAJT,I,oBCbD,WAgBC,SAAWwC,GACV,aAGEH,EAAO,CAAC,OAAgB,aAAlB,6BAOP,SAAUvC,GAGXA,EAAU6H,QAAQ9F,UAAUiJ,KAAO,CAIjC,IAAQ,aACR,IAAQ,cACR,MAAQ,iBACR,MAAQ,oBACR,MAAQ,6BACR,IAAQ,gBACR,IAAQ,cACR,IAAQ,4BACR,IAAQ,cACR,IAAQ,kBACR,IAAQ,sBACR,IAAQ,mBACR,IAAQ,mBACR,IAAQ,cACR,IAAQ,cACR,IAAQ,iBACR,IAAQ,eACR,IAAQ,eACR,IAAQ,kBACR,IAAQ,wBACR,IAAQ,8BACR,IAAQ,mBACR,IAAQ,aACR,IAAQ,wBACR,IAAQ,oBACR,IAAQ,sBACR,IAAQ,WACR,IAAQ,mBACR,IAAQ,OACR,IAAQ,QACR,IAAQ,WACR,IAAQ,SACR,MAAQ,YAIR,MAAQ,cACR,MAAQ,kBACR,MAAQ,aACR,MAAQ,kBACR,MAAQ,kBACR,MAAQ,QACR,MAAQ,0BACR,MAAQ,yBACR,MAAQ,YACR,MAAQ,cACR,MAAQ,mBACR,MAAQ,mBACR,MAAQ,oBACR,MAAQ,aACR,MAAQ,qBACR,MAAQ,sBACR,MAAQ,eACR,MAAQ,UACR,MAAQ,kBACR,MAAQ,sBACR,MAAQ,0BACR,MAAQ,OACR,MAAQ,kBACR,MAAQ,4BACR,MAAQ,2BACR,MAAQ,WACR,MAAQ,sBACR,MAAQ,sBACR,MAAQ,oBACR,MAAQ,gBACR,MAAQ,kBACR,MAAQ,eACR,MAAQ,mBACR,MAAQ,kBACR,MAAQ,eACR,MAAQ,cACR,MAAQ,QACR,MAAQ,cACR,MAAQ,cACR,MAAQ,cACR,MAAQ,2BACR,MAAQ,wBACR,MAAQ,wBACR,MAAQ,2BACR,MAAQ,kBACR,MAAQ,gBACR,MAAQ,gBACR,MAAQ,aACR,MAAQ,YACR,MAAQ,aACR,MAAQ,iBACR,MAAQ,eACR,MAAQ,eACR,MAAQ,mBACR,MAAQ,wBACR,MAAQ,mBACR,MAAQ,cACR,MAAQ,WACR,MAAQ,aACR,MAAQ,YACR,MAAQ,2BACR,MAAQ,uBACR,MAAQ,gBACR,MAAQ,kBACR,MAAQ,mBACR,MAAQ,oBACR,MAAQ,WACR,MAAQ,YACR,MAAQ,mBAIRC,EAAQ,eACR,EAAQ,iBACR,EAAQ,cACR,EAAQ,kBACR,EAAQ,eACR,EAAQ,iBACR,EAAQ,cACR,EAAQ,eACR,EAAQ,gBACR,EAAQ,YACR,GAAQ,iBACR,GAAQ,SACR,GAAQ,cACR,GAAQ,WACR,GAAQ,cACR,GAAQ,WACR,GAAQ,qBACR,GAAQ,kBACR,GAAQ,cACR,GAAQ,qBACR,GAAQ,kBACR,GAAQ,sBACR,GAAQ,mBACR,GAAQ,oBACR,GAAQ,iBACR,GAAQ,qBACR,GAAQ,kBACR,GAAQ,sBACR,GAAQ,qBACR,GAAQ,eACR,GAAQ,kBACR,GAAQ,wBAGVjL,EAAU6H,QAAQ9F,UAAUmJ,aAAe,CACzCC,gBAAiB,CACfF,EAAG,YACH7C,EAAG,SACHI,EAAG,iBACHI,EAAG,oBACHE,EAAG,mBACHE,EAAG,mBACHoC,EAAG,iBACHC,EAAG,gBACHC,EAAG,kBAELC,aAAc,CACZN,EAAG,UACH7C,EAAG,UACHI,EAAG,wBACHI,EAAG,OACHE,EAAG,YACHE,EAAG,UACHoC,EAAG,UACHI,IAAK,SAEPC,YAAa,CACXR,EAAG,UACH7C,EAAG,WACHI,EAAG,cACHI,EAAG,gCACHE,EAAG,QACHG,EAAG,eACHE,GAAI,iBACJuC,GAAI,QACJC,GAAI,wCACJC,GAAI,yCACJC,GAAI,0CACJC,GAAI,sCACJC,GAAI,mBACJC,GAAI,mBACJC,GAAI,mBACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,MACJC,GAAI,sBACJd,IAAK,SAEPe,MAAO,CACLtB,EAAQ,qBACR,EAAQ,cACR,EAAQ,mCACR,EAAQ,+BACR,EAAQ,qCACR,GAAQ,gEACR,GAAQ,4DACR,GAAQ,4CACR,GAAQ,gCACR,GAAQ,yBACR,GAAQ,oDACR,GAAQ,gDACR,GAAQ,oBACR,GAAQ,sCACR,GAAQ,iEACR,GAAQ,6DACR,GAAQ,6DACR,GAAQ,wFACR,GAAQ,oFACR,GAAQ,iDACR,GAAQ,4EACR,GAAQ,yEAEVuB,cAAe,CACbpE,EAAG,YACHI,EAAG,6BACHI,EAAG,6BACHE,EAAG,+BACHE,EAAG,+BACHqC,EAAG,mBACHC,EAAG,kCAELmB,iBAAkB,CAChBxB,EAAG,WACH7C,EAAG,YACHI,EAAG,WACHI,EAAG,eAEL8D,UAAW,CACTtE,EAAG,yBAELuE,eAAgB,CACd1B,EAAG,iBACH7C,EAAG,kBAELwE,aAAc,CACZ3B,EAAG,qBACH7C,EAAG,wBAELyE,YAAa,CACX5B,EAAG,OACH7C,EAAG,cACHI,EAAG,eACHI,EAAG,gBACHE,EAAG,kBAELgE,SAAU,CACR7B,EAAG,SACH7C,EAAG,OACHI,EAAG,QAELuE,WAAY,CACV9B,EAAG,SACH7C,EAAG,iBACHI,EAAG,mBAELwE,UAAW,CACT/B,EAAG,SACH7C,EAAG,OACHI,EAAG,QAELyE,qBAAsB,CACpBhC,EAAG,UACH7C,EAAG,QACHI,EAAG,aACHI,EAAG,gBAELsE,WAAY,CACVtE,EAAG,OAELuE,wBAAyB,CACvBlC,EAAG,GACH7C,EAAG,IACHI,EAAG,KACHI,EAAG,KACHE,EAAG,IACHE,EAAG,IACHoC,EAAG,KAELrD,YAAa,CACXK,EAAG,WACHI,EAAG,YACHI,EAAG,eACHE,EAAG,cACHE,EAAG,WACHoC,EAAG,YACHC,EAAG,eACHC,EAAG,gBAIPtL,EAAU6H,QAAQ9F,UAAUqL,QAAU,SAAUnF,GAC9C,IAAIoF,EAAQ5K,KAAKuF,IAAIC,GACrB,OAAQA,GACN,IAAK,cACL,IAAK,QACL,IAAK,eACL,IAAK,kBACL,IAAK,gBACL,IAAK,mBACL,IAAK,YACL,IAAK,iBACL,IAAK,eACL,IAAK,cACL,IAAK,WACL,IAAK,aACL,IAAK,YACL,IAAK,uBACL,IAAK,aACL,IAAK,cACH,OAAOxF,KAAKyI,aAAajD,GAAIoF,GAC/B,IAAK,cACL,IAAK,kBACH,IAAKA,EAAO,OACZ,OAAO5E,OAAOC,aAAa2E,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IACjE,IAAK,0BACH,IAAKA,EAAO,OACZ,OACE5K,KAAKyI,aAAajD,GAAIoF,EAAM,IAC5B5K,KAAKyI,aAAajD,GAAIoF,EAAM,IAC5B5K,KAAKyI,aAAajD,GAAIoF,EAAM,IAC5B5K,KAAKyI,aAAajD,GAAIoF,EAAM,IAEhC,IAAK,eACH,IAAKA,EAAO,OACZ,OAAOA,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAAK,IAAMA,EAAM,GAEpE,OAAO5E,OAAO4E,IAEf,SAAWC,GACV,IAEIC,EAFAvC,EAAOsC,EAAiBtC,KACxBlD,EAAMwF,EAAiBxF,IAG3B,IAAKyF,KAAQvC,EACPA,EAAKzF,eAAegI,KACtBzF,EAAIkD,EAAKuC,IAASA,GAPvB,CAUEvN,EAAU6H,QAAQ9F,WAErB/B,EAAU6H,QAAQ9F,UAAUyL,OAAS,WACnC,IACID,EACAtF,EAFAH,EAAM,GAGV,IAAKyF,KAAQ9K,KACPA,KAAK8C,eAAegI,KACtBtF,EAAKxF,KAAKuI,KAAKuC,MAEbzF,EAAIG,GAAMxF,KAAK2K,QAAQnF,IAI7B,OAAOH,KA7WD,+BAJT,I,oBChBD,WAaC,SAAWpF,GACV,aAGEH,EAAO,CAAC,OAAgB,OAAsB,aAAxC,6BAWP,SAAUvC,GAGX,IAAIyN,EAA0BzN,EAAUyG,gBACpCiH,EAAwB1N,EAAU6E,cAClC8I,EAA+B3N,EAAUiF,qBACzC2I,EAAgC5N,EAAUkF,sBAG9ClF,EAAUyG,gBAAkB,SAAUtG,GACpC,QACIA,EAAQ0N,aAAeJ,EAAwBxL,KAAKjC,EAAWG,IAKrEH,EAAU6E,cAAgB,SAAU1E,GAClC,OACGA,IAAmC,IAAxBA,EAAQ0N,aACpBH,EAAsBzL,KAAKjC,EAAWG,IAM1CH,EAAUiF,qBAAuB,SAAUa,EAAQ3F,GACjDwN,EAA6B1L,KAAKjC,EAAW8F,EAAQ3F,GACrD,IAAI2N,EAAMhI,EAAOS,WAAW,MACxBnB,EAAQU,EAAOV,MACfC,EAASS,EAAOT,OAChB0I,EAAajI,EAAO8B,MAAMxC,MAC1B4I,EAAclI,EAAO8B,MAAMvC,OAC3BwI,EAAc1N,EAAQ0N,YAC1B,GAAKA,KAAeA,EAAc,GASlC,OANIA,EAAc,IAChB/H,EAAOV,MAAQC,EACfS,EAAOT,OAASD,EAChBU,EAAO8B,MAAMxC,MAAQ4I,EACrBlI,EAAO8B,MAAMvC,OAAS0I,GAEhBF,GACN,KAAK,EAEHC,EAAIG,UAAU7I,EAAO,GACrB0I,EAAI9I,OAAO,EAAG,GACd,MACF,KAAK,EAEH8I,EAAIG,UAAU7I,EAAOC,GACrByI,EAAII,OAAOjH,KAAKkH,IAChB,MACF,KAAK,EAEHL,EAAIG,UAAU,EAAG5I,GACjByI,EAAI9I,MAAM,GAAI,GACd,MACF,KAAK,EAEH8I,EAAII,OAAO,GAAMjH,KAAKkH,IACtBL,EAAI9I,MAAM,GAAI,GACd,MACF,KAAK,EAEH8I,EAAII,OAAO,GAAMjH,KAAKkH,IACtBL,EAAIG,UAAU,GAAI5I,GAClB,MACF,KAAK,EAEHyI,EAAII,OAAO,GAAMjH,KAAKkH,IACtBL,EAAIG,UAAU7I,GAAQC,GACtByI,EAAI9I,OAAO,EAAG,GACd,MACF,KAAK,EAEH8I,EAAII,QAAQ,GAAMjH,KAAKkH,IACvBL,EAAIG,WAAW7I,EAAO,KAO5BpF,EAAUkF,sBAAwB,SAAU7E,EAAK+N,EAAMjM,GACrD,IAEIgD,EACAnB,EAHA7D,EAAUyN,EAA8B3L,KAAKjC,EAAWK,EAAK+N,GAC7DP,EAAc1N,EAAQ0N,YAM1B,IAHoB,IAAhBA,GAAwB1L,GAAQA,EAAK0H,OACvCgE,EAAc1L,EAAK0H,KAAK7B,IAAI,iBAEzB6F,GAAeA,EAAc,GAAqB,IAAhBA,EACrC,OAAO1N,EAGT,IAAK6D,KADLmB,EAAa,GACHhF,EACJA,EAAQoF,eAAevB,KACzBmB,EAAWnB,GAAK7D,EAAQ6D,IAI5B,OADAmB,EAAW0I,YAAcA,EACjBA,GACN,KAAK,EAEH1I,EAAWkC,KAAOlH,EAAQqH,MAC1BrC,EAAWqC,MAAQrH,EAAQkH,KAC3B,MACF,KAAK,EAEHlC,EAAWkC,KAAOlH,EAAQqH,MAC1BrC,EAAWmC,IAAMnH,EAAQsH,OACzBtC,EAAWqC,MAAQrH,EAAQkH,KAC3BlC,EAAWsC,OAAStH,EAAQmH,IAC5B,MACF,KAAK,EAEHnC,EAAWmC,IAAMnH,EAAQsH,OACzBtC,EAAWsC,OAAStH,EAAQmH,IAC5B,MACF,KAAK,EAEHnC,EAAWkC,KAAOlH,EAAQmH,IAC1BnC,EAAWmC,IAAMnH,EAAQkH,KACzBlC,EAAWqC,MAAQrH,EAAQsH,OAC3BtC,EAAWsC,OAAStH,EAAQqH,MAC5B,MACF,KAAK,EAEHrC,EAAWkC,KAAOlH,EAAQmH,IAC1BnC,EAAWmC,IAAMnH,EAAQqH,MACzBrC,EAAWqC,MAAQrH,EAAQsH,OAC3BtC,EAAWsC,OAAStH,EAAQkH,KAC5B,MACF,KAAK,EAEHlC,EAAWkC,KAAOlH,EAAQsH,OAC1BtC,EAAWmC,IAAMnH,EAAQqH,MACzBrC,EAAWqC,MAAQrH,EAAQmH,IAC3BnC,EAAWsC,OAAStH,EAAQkH,KAC5B,MACF,KAAK,EAEHlC,EAAWkC,KAAOlH,EAAQsH,OAC1BtC,EAAWmC,IAAMnH,EAAQkH,KACzBlC,EAAWqC,MAAQrH,EAAQmH,IAC3BnC,EAAWsC,OAAStH,EAAQqH,MAWhC,OARIrC,EAAW0I,YAAc,IAC3B1I,EAAWQ,SAAWxF,EAAQyF,UAC9BT,EAAWS,UAAYzF,EAAQwF,SAC/BR,EAAWuB,SAAWvG,EAAQwG,UAC9BxB,EAAWwB,UAAYxG,EAAQuG,SAC/BvB,EAAWc,YAAc9F,EAAQ+F,aACjCf,EAAWe,aAAe/F,EAAQ8F,aAE7Bd,KAxKD,+BAJT,I,oBCbDkJ,EAAOC,QAAUC,EAAQ,KAEzBA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ","file":"static/js/5.d02837f8.chunk.js","sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, URL, webkitURL, FileReader */\n\n;(function ($) {\n  'use strict'\n\n  // Loads an image for a given File object.\n  // Invokes the callback with an img or optional canvas\n  // element (if supported by the browser) as parameter:\n  function loadImage (file, callback, options) {\n    var img = document.createElement('img')\n    var url\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, callback, options)\n    }\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, callback, options)\n    }\n    if (typeof file === 'string') {\n      loadImage.fetchBlob(\n        file,\n        function (blob) {\n          if (blob) {\n            file = blob\n            url = loadImage.createObjectURL(file)\n          } else {\n            url = file\n            if (options && options.crossOrigin) {\n              img.crossOrigin = options.crossOrigin\n            }\n          }\n          img.src = url\n        },\n        options\n      )\n      return img\n    } else if (\n      loadImage.isInstanceOf('Blob', file) ||\n      // Files are also Blob instances, but some browsers\n      // (Firefox 3.6) support the File API but not Blobs:\n      loadImage.isInstanceOf('File', file)\n    ) {\n      url = img._objectURL = loadImage.createObjectURL(file)\n      if (url) {\n        img.src = url\n        return img\n      }\n      return loadImage.readFile(file, function (e) {\n        var target = e.target\n        if (target && target.result) {\n          img.src = target.result\n        } else if (callback) {\n          callback(e)\n        }\n      })\n    }\n  }\n  // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n  var urlAPI =\n    ($.createObjectURL && $) ||\n    ($.URL && URL.revokeObjectURL && URL) ||\n    ($.webkitURL && webkitURL)\n\n  function revokeHelper (img, options) {\n    if (img._objectURL && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(img._objectURL)\n      delete img._objectURL\n    }\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback, options) {\n    callback()\n  }\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.onerror = function (img, event, file, callback, options) {\n    revokeHelper(img, options)\n    if (callback) {\n      callback.call(img, event)\n    }\n  }\n\n  loadImage.onload = function (img, event, file, callback, options) {\n    revokeHelper(img, options)\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {})\n    }\n  }\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false\n  }\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader()\n      fileReader.onload = fileReader.onerror = callback\n      method = method || 'readAsDataURL'\n      if (fileReader[method]) {\n        fileReader[method](file)\n        return fileReader\n      }\n    }\n    return false\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n","/*\n * JavaScript Load Image Meta\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Image meta data handling implementation\n * based on the help and contribution of\n * Achim Stöhr.\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, Blob */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var hasblobSlice =\n    typeof Blob !== 'undefined' &&\n    (Blob.prototype.slice ||\n      Blob.prototype.webkitSlice ||\n      Blob.prototype.mozSlice)\n\n  loadImage.blobSlice =\n    hasblobSlice &&\n    function () {\n      var slice = this.slice || this.webkitSlice || this.mozSlice\n      return slice.apply(this, arguments)\n    }\n\n  loadImage.metaDataParsers = {\n    jpeg: {\n      0xffe1: [] // APP1 marker\n    }\n  }\n\n  // Parses image meta data and calls the callback with an object argument\n  // with the following properties:\n  // * imageHead: The complete image head as ArrayBuffer (Uint8Array for IE10)\n  // The options arguments accepts an object and supports the following properties:\n  // * maxMetaDataSize: Defines the maximum number of bytes to parse.\n  // * disableImageHead: Disables creating the imageHead property.\n  loadImage.parseMetaData = function (file, callback, options, data) {\n    options = options || {}\n    data = data || {}\n    var that = this\n    // 256 KiB should contain all EXIF/ICC/IPTC segments:\n    var maxMetaDataSize = options.maxMetaDataSize || 262144\n    var noMetaData = !(\n      typeof DataView !== 'undefined' &&\n      file &&\n      file.size >= 12 &&\n      file.type === 'image/jpeg' &&\n      loadImage.blobSlice\n    )\n    if (\n      noMetaData ||\n      !loadImage.readFile(\n        loadImage.blobSlice.call(file, 0, maxMetaDataSize),\n        function (e) {\n          if (e.target.error) {\n            // FileReader error\n            console.log(e.target.error)\n            callback(data)\n            return\n          }\n          // Note on endianness:\n          // Since the marker and length bytes in JPEG files are always\n          // stored in big endian order, we can leave the endian parameter\n          // of the DataView methods undefined, defaulting to big endian.\n          var buffer = e.target.result\n          var dataView = new DataView(buffer)\n          var offset = 2\n          var maxOffset = dataView.byteLength - 4\n          var headLength = offset\n          var markerBytes\n          var markerLength\n          var parsers\n          var i\n          // Check for the JPEG marker (0xffd8):\n          if (dataView.getUint16(0) === 0xffd8) {\n            while (offset < maxOffset) {\n              markerBytes = dataView.getUint16(offset)\n              // Search for APPn (0xffeN) and COM (0xfffe) markers,\n              // which contain application-specific meta-data like\n              // Exif, ICC and IPTC data and text comments:\n              if (\n                (markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\n                markerBytes === 0xfffe\n              ) {\n                // The marker bytes (2) are always followed by\n                // the length bytes (2), indicating the length of the\n                // marker segment, which includes the length bytes,\n                // but not the marker bytes, so we add 2:\n                markerLength = dataView.getUint16(offset + 2) + 2\n                if (offset + markerLength > dataView.byteLength) {\n                  console.log('Invalid meta data: Invalid segment size.')\n                  break\n                }\n                parsers = loadImage.metaDataParsers.jpeg[markerBytes]\n                if (parsers) {\n                  for (i = 0; i < parsers.length; i += 1) {\n                    parsers[i].call(\n                      that,\n                      dataView,\n                      offset,\n                      markerLength,\n                      data,\n                      options\n                    )\n                  }\n                }\n                offset += markerLength\n                headLength = offset\n              } else {\n                // Not an APPn or COM marker, probably safe to\n                // assume that this is the end of the meta data\n                break\n              }\n            }\n            // Meta length must be longer than JPEG marker (2)\n            // plus APPn marker (2), followed by length bytes (2):\n            if (!options.disableImageHead && headLength > 6) {\n              if (buffer.slice) {\n                data.imageHead = buffer.slice(0, headLength)\n              } else {\n                // Workaround for IE10, which does not yet\n                // support ArrayBuffer.slice:\n                data.imageHead = new Uint8Array(buffer).subarray(0, headLength)\n              }\n            }\n          } else {\n            console.log('Invalid JPEG file: Missing JPEG marker.')\n          }\n          callback(data)\n        },\n        'readAsArrayBuffer'\n      )\n    ) {\n      callback(data)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically:\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  var originalTransform = loadImage.transform\n  loadImage.transform = function (img, options, callback, file, data) {\n    if (loadImage.hasMetaOption(options)) {\n      loadImage.parseMetaData(\n        file,\n        function (data) {\n          originalTransform.call(loadImage, img, options, callback, file, data)\n        },\n        options,\n        data\n      )\n    } else {\n      originalTransform.apply(loadImage, arguments)\n    }\n  }\n})\n","/*\n * JavaScript Load Image Scaling\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var originalTransform = loadImage.transform\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    originalTransform.call(\n      loadImage,\n      loadImage.scale(img, options, data),\n      options,\n      callback,\n      file,\n      data\n    )\n  }\n\n  // Transform image coordinates, allows to override e.g.\n  // the canvas orientation based on the orientation option,\n  // gets canvas, options passed as arguments:\n  loadImage.transformCoordinates = function () {}\n\n  // Returns transformed options, allows to override e.g.\n  // maxWidth, maxHeight and crop options based on the aspectRatio.\n  // gets img, options passed as arguments:\n  loadImage.getTransformedOptions = function (img, options) {\n    var aspectRatio = options.aspectRatio\n    var newOptions\n    var i\n    var width\n    var height\n    if (!aspectRatio) {\n      return options\n    }\n    newOptions = {}\n    for (i in options) {\n      if (options.hasOwnProperty(i)) {\n        newOptions[i] = options[i]\n      }\n    }\n    newOptions.crop = true\n    width = img.naturalWidth || img.width\n    height = img.naturalHeight || img.height\n    if (width / height > aspectRatio) {\n      newOptions.maxWidth = height * aspectRatio\n      newOptions.maxHeight = height\n    } else {\n      newOptions.maxWidth = width\n      newOptions.maxHeight = width / aspectRatio\n    }\n    return newOptions\n  }\n\n  // Canvas render method, allows to implement a different rendering algorithm:\n  loadImage.renderImageToCanvas = function (\n    canvas,\n    img,\n    sourceX,\n    sourceY,\n    sourceWidth,\n    sourceHeight,\n    destX,\n    destY,\n    destWidth,\n    destHeight\n  ) {\n    canvas\n      .getContext('2d')\n      .drawImage(\n        img,\n        sourceX,\n        sourceY,\n        sourceWidth,\n        sourceHeight,\n        destX,\n        destY,\n        destWidth,\n        destHeight\n      )\n    return canvas\n  }\n\n  // Determines if the target image should be a canvas element:\n  loadImage.hasCanvasOption = function (options) {\n    return options.canvas || options.crop || !!options.aspectRatio\n  }\n\n  // Scales and/or crops the given image (img or canvas HTML element)\n  // using the given options.\n  // Returns a canvas object if the browser supports canvas\n  // and the hasCanvasOption method returns true or a canvas\n  // object is passed as image, else the scaled image:\n  loadImage.scale = function (img, options, data) {\n    options = options || {}\n    var canvas = document.createElement('canvas')\n    var useCanvas =\n      img.getContext ||\n      (loadImage.hasCanvasOption(options) && canvas.getContext)\n    var width = img.naturalWidth || img.width\n    var height = img.naturalHeight || img.height\n    var destWidth = width\n    var destHeight = height\n    var maxWidth\n    var maxHeight\n    var minWidth\n    var minHeight\n    var sourceWidth\n    var sourceHeight\n    var sourceX\n    var sourceY\n    var pixelRatio\n    var downsamplingRatio\n    var tmp\n    function scaleUp () {\n      var scale = Math.max(\n        (minWidth || destWidth) / destWidth,\n        (minHeight || destHeight) / destHeight\n      )\n      if (scale > 1) {\n        destWidth *= scale\n        destHeight *= scale\n      }\n    }\n    function scaleDown () {\n      var scale = Math.min(\n        (maxWidth || destWidth) / destWidth,\n        (maxHeight || destHeight) / destHeight\n      )\n      if (scale < 1) {\n        destWidth *= scale\n        destHeight *= scale\n      }\n    }\n    if (useCanvas) {\n      options = loadImage.getTransformedOptions(img, options, data)\n      sourceX = options.left || 0\n      sourceY = options.top || 0\n      if (options.sourceWidth) {\n        sourceWidth = options.sourceWidth\n        if (options.right !== undefined && options.left === undefined) {\n          sourceX = width - sourceWidth - options.right\n        }\n      } else {\n        sourceWidth = width - sourceX - (options.right || 0)\n      }\n      if (options.sourceHeight) {\n        sourceHeight = options.sourceHeight\n        if (options.bottom !== undefined && options.top === undefined) {\n          sourceY = height - sourceHeight - options.bottom\n        }\n      } else {\n        sourceHeight = height - sourceY - (options.bottom || 0)\n      }\n      destWidth = sourceWidth\n      destHeight = sourceHeight\n    }\n    maxWidth = options.maxWidth\n    maxHeight = options.maxHeight\n    minWidth = options.minWidth\n    minHeight = options.minHeight\n    if (useCanvas && maxWidth && maxHeight && options.crop) {\n      destWidth = maxWidth\n      destHeight = maxHeight\n      tmp = sourceWidth / sourceHeight - maxWidth / maxHeight\n      if (tmp < 0) {\n        sourceHeight = maxHeight * sourceWidth / maxWidth\n        if (options.top === undefined && options.bottom === undefined) {\n          sourceY = (height - sourceHeight) / 2\n        }\n      } else if (tmp > 0) {\n        sourceWidth = maxWidth * sourceHeight / maxHeight\n        if (options.left === undefined && options.right === undefined) {\n          sourceX = (width - sourceWidth) / 2\n        }\n      }\n    } else {\n      if (options.contain || options.cover) {\n        minWidth = maxWidth = maxWidth || minWidth\n        minHeight = maxHeight = maxHeight || minHeight\n      }\n      if (options.cover) {\n        scaleDown()\n        scaleUp()\n      } else {\n        scaleUp()\n        scaleDown()\n      }\n    }\n    if (useCanvas) {\n      pixelRatio = options.pixelRatio\n      if (pixelRatio > 1) {\n        canvas.style.width = destWidth + 'px'\n        canvas.style.height = destHeight + 'px'\n        destWidth *= pixelRatio\n        destHeight *= pixelRatio\n        canvas.getContext('2d').scale(pixelRatio, pixelRatio)\n      }\n      downsamplingRatio = options.downsamplingRatio\n      if (\n        downsamplingRatio > 0 &&\n        downsamplingRatio < 1 &&\n        destWidth < sourceWidth &&\n        destHeight < sourceHeight\n      ) {\n        while (sourceWidth * downsamplingRatio > destWidth) {\n          canvas.width = sourceWidth * downsamplingRatio\n          canvas.height = sourceHeight * downsamplingRatio\n          loadImage.renderImageToCanvas(\n            canvas,\n            img,\n            sourceX,\n            sourceY,\n            sourceWidth,\n            sourceHeight,\n            0,\n            0,\n            canvas.width,\n            canvas.height\n          )\n          sourceX = 0\n          sourceY = 0\n          sourceWidth = canvas.width\n          sourceHeight = canvas.height\n          img = document.createElement('canvas')\n          img.width = sourceWidth\n          img.height = sourceHeight\n          loadImage.renderImageToCanvas(\n            img,\n            canvas,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight\n          )\n        }\n      }\n      canvas.width = destWidth\n      canvas.height = destHeight\n      loadImage.transformCoordinates(canvas, options)\n      return loadImage.renderImageToCanvas(\n        canvas,\n        img,\n        sourceX,\n        sourceY,\n        sourceWidth,\n        sourceHeight,\n        0,\n        0,\n        destWidth,\n        destHeight\n      )\n    }\n    img.width = destWidth\n    img.height = destHeight\n    return img\n  }\n})\n","/*\n * JavaScript Load Image Exif Parser\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, Blob */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  loadImage.ExifMap = function () {\n    return this\n  }\n\n  loadImage.ExifMap.prototype.map = {\n    Orientation: 0x0112\n  }\n\n  loadImage.ExifMap.prototype.get = function (id) {\n    return this[id] || this[this.map[id]]\n  }\n\n  loadImage.getExifThumbnail = function (dataView, offset, length) {\n    if (!length || offset + length > dataView.byteLength) {\n      console.log('Invalid Exif data: Invalid thumbnail data.')\n      return\n    }\n    return loadImage.createObjectURL(\n      new Blob([dataView.buffer.slice(offset, offset + length)])\n    )\n  }\n\n  loadImage.exifTagTypes = {\n    // byte, 8-bit unsigned int:\n    1: {\n      getValue: function (dataView, dataOffset) {\n        return dataView.getUint8(dataOffset)\n      },\n      size: 1\n    },\n    // ascii, 8-bit byte:\n    2: {\n      getValue: function (dataView, dataOffset) {\n        return String.fromCharCode(dataView.getUint8(dataOffset))\n      },\n      size: 1,\n      ascii: true\n    },\n    // short, 16 bit int:\n    3: {\n      getValue: function (dataView, dataOffset, littleEndian) {\n        return dataView.getUint16(dataOffset, littleEndian)\n      },\n      size: 2\n    },\n    // long, 32 bit int:\n    4: {\n      getValue: function (dataView, dataOffset, littleEndian) {\n        return dataView.getUint32(dataOffset, littleEndian)\n      },\n      size: 4\n    },\n    // rational = two long values, first is numerator, second is denominator:\n    5: {\n      getValue: function (dataView, dataOffset, littleEndian) {\n        return (\n          dataView.getUint32(dataOffset, littleEndian) /\n          dataView.getUint32(dataOffset + 4, littleEndian)\n        )\n      },\n      size: 8\n    },\n    // slong, 32 bit signed int:\n    9: {\n      getValue: function (dataView, dataOffset, littleEndian) {\n        return dataView.getInt32(dataOffset, littleEndian)\n      },\n      size: 4\n    },\n    // srational, two slongs, first is numerator, second is denominator:\n    10: {\n      getValue: function (dataView, dataOffset, littleEndian) {\n        return (\n          dataView.getInt32(dataOffset, littleEndian) /\n          dataView.getInt32(dataOffset + 4, littleEndian)\n        )\n      },\n      size: 8\n    }\n  }\n  // undefined, 8-bit byte, value depending on field:\n  loadImage.exifTagTypes[7] = loadImage.exifTagTypes[1]\n\n  loadImage.getExifValue = function (\n    dataView,\n    tiffOffset,\n    offset,\n    type,\n    length,\n    littleEndian\n  ) {\n    var tagType = loadImage.exifTagTypes[type]\n    var tagSize\n    var dataOffset\n    var values\n    var i\n    var str\n    var c\n    if (!tagType) {\n      console.log('Invalid Exif data: Invalid tag type.')\n      return\n    }\n    tagSize = tagType.size * length\n    // Determine if the value is contained in the dataOffset bytes,\n    // or if the value at the dataOffset is a pointer to the actual data:\n    dataOffset =\n      tagSize > 4\n        ? tiffOffset + dataView.getUint32(offset + 8, littleEndian)\n        : offset + 8\n    if (dataOffset + tagSize > dataView.byteLength) {\n      console.log('Invalid Exif data: Invalid data offset.')\n      return\n    }\n    if (length === 1) {\n      return tagType.getValue(dataView, dataOffset, littleEndian)\n    }\n    values = []\n    for (i = 0; i < length; i += 1) {\n      values[i] = tagType.getValue(\n        dataView,\n        dataOffset + i * tagType.size,\n        littleEndian\n      )\n    }\n    if (tagType.ascii) {\n      str = ''\n      // Concatenate the chars:\n      for (i = 0; i < values.length; i += 1) {\n        c = values[i]\n        // Ignore the terminating NULL byte(s):\n        if (c === '\\u0000') {\n          break\n        }\n        str += c\n      }\n      return str\n    }\n    return values\n  }\n\n  loadImage.parseExifTag = function (\n    dataView,\n    tiffOffset,\n    offset,\n    littleEndian,\n    data\n  ) {\n    var tag = dataView.getUint16(offset, littleEndian)\n    data.exif[tag] = loadImage.getExifValue(\n      dataView,\n      tiffOffset,\n      offset,\n      dataView.getUint16(offset + 2, littleEndian), // tag type\n      dataView.getUint32(offset + 4, littleEndian), // tag length\n      littleEndian\n    )\n  }\n\n  loadImage.parseExifTags = function (\n    dataView,\n    tiffOffset,\n    dirOffset,\n    littleEndian,\n    data\n  ) {\n    var tagsNumber, dirEndOffset, i\n    if (dirOffset + 6 > dataView.byteLength) {\n      console.log('Invalid Exif data: Invalid directory offset.')\n      return\n    }\n    tagsNumber = dataView.getUint16(dirOffset, littleEndian)\n    dirEndOffset = dirOffset + 2 + 12 * tagsNumber\n    if (dirEndOffset + 4 > dataView.byteLength) {\n      console.log('Invalid Exif data: Invalid directory size.')\n      return\n    }\n    for (i = 0; i < tagsNumber; i += 1) {\n      this.parseExifTag(\n        dataView,\n        tiffOffset,\n        dirOffset + 2 + 12 * i, // tag offset\n        littleEndian,\n        data\n      )\n    }\n    // Return the offset to the next directory:\n    return dataView.getUint32(dirEndOffset, littleEndian)\n  }\n\n  loadImage.parseExifData = function (dataView, offset, length, data, options) {\n    if (options.disableExif) {\n      return\n    }\n    var tiffOffset = offset + 10\n    var littleEndian\n    var dirOffset\n    var thumbnailData\n    // Check for the ASCII code for \"Exif\" (0x45786966):\n    if (dataView.getUint32(offset + 4) !== 0x45786966) {\n      // No Exif data, might be XMP data instead\n      return\n    }\n    if (tiffOffset + 8 > dataView.byteLength) {\n      console.log('Invalid Exif data: Invalid segment size.')\n      return\n    }\n    // Check for the two null bytes:\n    if (dataView.getUint16(offset + 8) !== 0x0000) {\n      console.log('Invalid Exif data: Missing byte alignment offset.')\n      return\n    }\n    // Check the byte alignment:\n    switch (dataView.getUint16(tiffOffset)) {\n      case 0x4949:\n        littleEndian = true\n        break\n      case 0x4d4d:\n        littleEndian = false\n        break\n      default:\n        console.log('Invalid Exif data: Invalid byte alignment marker.')\n        return\n    }\n    // Check for the TIFF tag marker (0x002A):\n    if (dataView.getUint16(tiffOffset + 2, littleEndian) !== 0x002a) {\n      console.log('Invalid Exif data: Missing TIFF marker.')\n      return\n    }\n    // Retrieve the directory offset bytes, usually 0x00000008 or 8 decimal:\n    dirOffset = dataView.getUint32(tiffOffset + 4, littleEndian)\n    // Create the exif object to store the tags:\n    data.exif = new loadImage.ExifMap()\n    // Parse the tags of the main image directory and retrieve the\n    // offset to the next directory, usually the thumbnail directory:\n    dirOffset = loadImage.parseExifTags(\n      dataView,\n      tiffOffset,\n      tiffOffset + dirOffset,\n      littleEndian,\n      data\n    )\n    if (dirOffset && !options.disableExifThumbnail) {\n      thumbnailData = { exif: {} }\n      dirOffset = loadImage.parseExifTags(\n        dataView,\n        tiffOffset,\n        tiffOffset + dirOffset,\n        littleEndian,\n        thumbnailData\n      )\n      // Check for JPEG Thumbnail offset:\n      if (thumbnailData.exif[0x0201]) {\n        data.exif.Thumbnail = loadImage.getExifThumbnail(\n          dataView,\n          tiffOffset + thumbnailData.exif[0x0201],\n          thumbnailData.exif[0x0202] // Thumbnail data length\n        )\n      }\n    }\n    // Check for Exif Sub IFD Pointer:\n    if (data.exif[0x8769] && !options.disableExifSub) {\n      loadImage.parseExifTags(\n        dataView,\n        tiffOffset,\n        tiffOffset + data.exif[0x8769], // directory offset\n        littleEndian,\n        data\n      )\n    }\n    // Check for GPS Info IFD Pointer:\n    if (data.exif[0x8825] && !options.disableExifGps) {\n      loadImage.parseExifTags(\n        dataView,\n        tiffOffset,\n        tiffOffset + data.exif[0x8825], // directory offset\n        littleEndian,\n        data\n      )\n    }\n  }\n\n  // Registers the Exif parser for the APP1 JPEG meta data segment:\n  loadImage.metaDataParsers.jpeg[0xffe1].push(loadImage.parseExifData)\n\n  // Adds the following properties to the parseMetaData callback data:\n  // * exif: The exif tags, parsed by the parseExifData method\n\n  // Adds the following options to the parseMetaData method:\n  // * disableExif: Disables Exif parsing.\n  // * disableExifThumbnail: Disables parsing of the Exif Thumbnail.\n  // * disableExifSub: Disables parsing of the Exif Sub IFD.\n  // * disableExifGps: Disables parsing of the Exif GPS Info IFD.\n})\n","/*\n * JavaScript Load Image Fetch\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2017, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, fetch, Request */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  if (typeof fetch !== 'undefined' && typeof Request !== 'undefined') {\n    loadImage.fetchBlob = function (url, callback, options) {\n      if (loadImage.hasMetaOption(options)) {\n        return fetch(new Request(url, options))\n          .then(function (response) {\n            return response.blob()\n          })\n          .then(callback)\n          .catch(function (err) {\n            console.log(err)\n            callback()\n          })\n      } else {\n        callback()\n      }\n    }\n  }\n})\n","/*\n * JavaScript Load Image Exif Map\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Exif tags mapping based on\n * https://github.com/jseidelin/exif-js\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-exif'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-exif'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  loadImage.ExifMap.prototype.tags = {\n    // =================\n    // TIFF tags (IFD0):\n    // =================\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageHeight',\n    0x8769: 'ExifIFDPointer',\n    0x8825: 'GPSInfoIFDPointer',\n    0xa005: 'InteroperabilityIFDPointer',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0112: 'Orientation',\n    0x0115: 'SamplesPerPixel',\n    0x011c: 'PlanarConfiguration',\n    0x0212: 'YCbCrSubSampling',\n    0x0213: 'YCbCrPositioning',\n    0x011a: 'XResolution',\n    0x011b: 'YResolution',\n    0x0128: 'ResolutionUnit',\n    0x0111: 'StripOffsets',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x012d: 'TransferFunction',\n    0x013e: 'WhitePoint',\n    0x013f: 'PrimaryChromaticities',\n    0x0211: 'YCbCrCoefficients',\n    0x0214: 'ReferenceBlackWhite',\n    0x0132: 'DateTime',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0131: 'Software',\n    0x013b: 'Artist',\n    0x8298: 'Copyright',\n    // ==================\n    // Exif Sub IFD tags:\n    // ==================\n    0x9000: 'ExifVersion', // EXIF version\n    0xa000: 'FlashpixVersion', // Flashpix format version\n    0xa001: 'ColorSpace', // Color space information tag\n    0xa002: 'PixelXDimension', // Valid width of meaningful image\n    0xa003: 'PixelYDimension', // Valid height of meaningful image\n    0xa500: 'Gamma',\n    0x9101: 'ComponentsConfiguration', // Information about channels\n    0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\n    0x927c: 'MakerNote', // Any desired information written by the manufacturer\n    0x9286: 'UserComment', // Comments by user\n    0xa004: 'RelatedSoundFile', // Name of related sound file\n    0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\n    0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\n    0x9290: 'SubSecTime', // Fractions of seconds for DateTime\n    0x9291: 'SubSecTimeOriginal', // Fractions of seconds for DateTimeOriginal\n    0x9292: 'SubSecTimeDigitized', // Fractions of seconds for DateTimeDigitized\n    0x829a: 'ExposureTime', // Exposure time (in seconds)\n    0x829d: 'FNumber',\n    0x8822: 'ExposureProgram', // Exposure program\n    0x8824: 'SpectralSensitivity', // Spectral sensitivity\n    0x8827: 'PhotographicSensitivity', // EXIF 2.3, ISOSpeedRatings in EXIF 2.2\n    0x8828: 'OECF', // Optoelectric conversion factor\n    0x8830: 'SensitivityType',\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9201: 'ShutterSpeedValue', // Shutter speed\n    0x9202: 'ApertureValue', // Lens aperture\n    0x9203: 'BrightnessValue', // Value of brightness\n    0x9204: 'ExposureBias', // Exposure bias\n    0x9205: 'MaxApertureValue', // Smallest F number of lens\n    0x9206: 'SubjectDistance', // Distance to subject in meters\n    0x9207: 'MeteringMode', // Metering mode\n    0x9208: 'LightSource', // Kind of light source\n    0x9209: 'Flash', // Flash status\n    0x9214: 'SubjectArea', // Location and area of main subject\n    0x920a: 'FocalLength', // Focal length of the lens in mm\n    0xa20b: 'FlashEnergy', // Strobe energy in BCPS\n    0xa20c: 'SpatialFrequencyResponse',\n    0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FPRUnit\n    0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FPRUnit\n    0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring the focal plane resolution\n    0xa214: 'SubjectLocation', // Location of subject in image\n    0xa215: 'ExposureIndex', // Exposure index selected on camera\n    0xa217: 'SensingMethod', // Image sensor type\n    0xa300: 'FileSource', // Image source (3 == DSC)\n    0xa301: 'SceneType', // Scene type (1 == directly photographed)\n    0xa302: 'CFAPattern', // Color filter array geometric pattern\n    0xa401: 'CustomRendered', // Special processing\n    0xa402: 'ExposureMode', // Exposure mode\n    0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\n    0xa404: 'DigitalZoomRatio', // Digital zoom ratio\n    0xa405: 'FocalLengthIn35mmFilm',\n    0xa406: 'SceneCaptureType', // Type of scene\n    0xa407: 'GainControl', // Degree of overall image gain adjustment\n    0xa408: 'Contrast', // Direction of contrast processing applied by camera\n    0xa409: 'Saturation', // Direction of saturation processing applied by camera\n    0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\n    0xa40b: 'DeviceSettingDescription',\n    0xa40c: 'SubjectDistanceRange', // Distance to subject\n    0xa420: 'ImageUniqueID', // Identifier assigned uniquely to each image\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: 'LensSpecification',\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    // ==============\n    // GPS Info tags:\n    // ==============\n    0x0000: 'GPSVersionID',\n    0x0001: 'GPSLatitudeRef',\n    0x0002: 'GPSLatitude',\n    0x0003: 'GPSLongitudeRef',\n    0x0004: 'GPSLongitude',\n    0x0005: 'GPSAltitudeRef',\n    0x0006: 'GPSAltitude',\n    0x0007: 'GPSTimeStamp',\n    0x0008: 'GPSSatellites',\n    0x0009: 'GPSStatus',\n    0x000a: 'GPSMeasureMode',\n    0x000b: 'GPSDOP',\n    0x000c: 'GPSSpeedRef',\n    0x000d: 'GPSSpeed',\n    0x000e: 'GPSTrackRef',\n    0x000f: 'GPSTrack',\n    0x0010: 'GPSImgDirectionRef',\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: 'GPSDestLatitudeRef',\n    0x0014: 'GPSDestLatitude',\n    0x0015: 'GPSDestLongitudeRef',\n    0x0016: 'GPSDestLongitude',\n    0x0017: 'GPSDestBearingRef',\n    0x0018: 'GPSDestBearing',\n    0x0019: 'GPSDestDistanceRef',\n    0x001a: 'GPSDestDistance',\n    0x001b: 'GPSProcessingMethod',\n    0x001c: 'GPSAreaInformation',\n    0x001d: 'GPSDateStamp',\n    0x001e: 'GPSDifferential',\n    0x001f: 'GPSHPositioningError'\n  }\n\n  loadImage.ExifMap.prototype.stringValues = {\n    ExposureProgram: {\n      0: 'Undefined',\n      1: 'Manual',\n      2: 'Normal program',\n      3: 'Aperture priority',\n      4: 'Shutter priority',\n      5: 'Creative program',\n      6: 'Action program',\n      7: 'Portrait mode',\n      8: 'Landscape mode'\n    },\n    MeteringMode: {\n      0: 'Unknown',\n      1: 'Average',\n      2: 'CenterWeightedAverage',\n      3: 'Spot',\n      4: 'MultiSpot',\n      5: 'Pattern',\n      6: 'Partial',\n      255: 'Other'\n    },\n    LightSource: {\n      0: 'Unknown',\n      1: 'Daylight',\n      2: 'Fluorescent',\n      3: 'Tungsten (incandescent light)',\n      4: 'Flash',\n      9: 'Fine weather',\n      10: 'Cloudy weather',\n      11: 'Shade',\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\n      13: 'Day white fluorescent (N 4600 - 5400K)',\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\n      15: 'White fluorescent (WW 3200 - 3700K)',\n      17: 'Standard light A',\n      18: 'Standard light B',\n      19: 'Standard light C',\n      20: 'D55',\n      21: 'D65',\n      22: 'D75',\n      23: 'D50',\n      24: 'ISO studio tungsten',\n      255: 'Other'\n    },\n    Flash: {\n      0x0000: 'Flash did not fire',\n      0x0001: 'Flash fired',\n      0x0005: 'Strobe return light not detected',\n      0x0007: 'Strobe return light detected',\n      0x0009: 'Flash fired, compulsory flash mode',\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\n      0x0010: 'Flash did not fire, compulsory flash mode',\n      0x0018: 'Flash did not fire, auto mode',\n      0x0019: 'Flash fired, auto mode',\n      0x001d: 'Flash fired, auto mode, return light not detected',\n      0x001f: 'Flash fired, auto mode, return light detected',\n      0x0020: 'No flash function',\n      0x0041: 'Flash fired, red-eye reduction mode',\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\n    },\n    SensingMethod: {\n      1: 'Undefined',\n      2: 'One-chip color area sensor',\n      3: 'Two-chip color area sensor',\n      4: 'Three-chip color area sensor',\n      5: 'Color sequential area sensor',\n      7: 'Trilinear sensor',\n      8: 'Color sequential linear sensor'\n    },\n    SceneCaptureType: {\n      0: 'Standard',\n      1: 'Landscape',\n      2: 'Portrait',\n      3: 'Night scene'\n    },\n    SceneType: {\n      1: 'Directly photographed'\n    },\n    CustomRendered: {\n      0: 'Normal process',\n      1: 'Custom process'\n    },\n    WhiteBalance: {\n      0: 'Auto white balance',\n      1: 'Manual white balance'\n    },\n    GainControl: {\n      0: 'None',\n      1: 'Low gain up',\n      2: 'High gain up',\n      3: 'Low gain down',\n      4: 'High gain down'\n    },\n    Contrast: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    Saturation: {\n      0: 'Normal',\n      1: 'Low saturation',\n      2: 'High saturation'\n    },\n    Sharpness: {\n      0: 'Normal',\n      1: 'Soft',\n      2: 'Hard'\n    },\n    SubjectDistanceRange: {\n      0: 'Unknown',\n      1: 'Macro',\n      2: 'Close view',\n      3: 'Distant view'\n    },\n    FileSource: {\n      3: 'DSC'\n    },\n    ComponentsConfiguration: {\n      0: '',\n      1: 'Y',\n      2: 'Cb',\n      3: 'Cr',\n      4: 'R',\n      5: 'G',\n      6: 'B'\n    },\n    Orientation: {\n      1: 'top-left',\n      2: 'top-right',\n      3: 'bottom-right',\n      4: 'bottom-left',\n      5: 'left-top',\n      6: 'right-top',\n      7: 'right-bottom',\n      8: 'left-bottom'\n    }\n  }\n\n  loadImage.ExifMap.prototype.getText = function (id) {\n    var value = this.get(id)\n    switch (id) {\n      case 'LightSource':\n      case 'Flash':\n      case 'MeteringMode':\n      case 'ExposureProgram':\n      case 'SensingMethod':\n      case 'SceneCaptureType':\n      case 'SceneType':\n      case 'CustomRendered':\n      case 'WhiteBalance':\n      case 'GainControl':\n      case 'Contrast':\n      case 'Saturation':\n      case 'Sharpness':\n      case 'SubjectDistanceRange':\n      case 'FileSource':\n      case 'Orientation':\n        return this.stringValues[id][value]\n      case 'ExifVersion':\n      case 'FlashpixVersion':\n        if (!value) return\n        return String.fromCharCode(value[0], value[1], value[2], value[3])\n      case 'ComponentsConfiguration':\n        if (!value) return\n        return (\n          this.stringValues[id][value[0]] +\n          this.stringValues[id][value[1]] +\n          this.stringValues[id][value[2]] +\n          this.stringValues[id][value[3]]\n        )\n      case 'GPSVersionID':\n        if (!value) return\n        return value[0] + '.' + value[1] + '.' + value[2] + '.' + value[3]\n    }\n    return String(value)\n  }\n  ;(function (exifMapPrototype) {\n    var tags = exifMapPrototype.tags\n    var map = exifMapPrototype.map\n    var prop\n    // Map the tag names to tags:\n    for (prop in tags) {\n      if (tags.hasOwnProperty(prop)) {\n        map[tags[prop]] = prop\n      }\n    }\n  })(loadImage.ExifMap.prototype)\n\n  loadImage.ExifMap.prototype.getAll = function () {\n    var map = {}\n    var prop\n    var id\n    for (prop in this) {\n      if (this.hasOwnProperty(prop)) {\n        id = this.tags[prop]\n        if (id) {\n          map[id] = this.getText(id)\n        }\n      }\n    }\n    return map\n  }\n})\n","/*\n * JavaScript Load Image Orientation\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-scale', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(\n      require('./load-image'),\n      require('./load-image-scale'),\n      require('./load-image-meta')\n    )\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var originalHasCanvasOption = loadImage.hasCanvasOption\n  var originalHasMetaOption = loadImage.hasMetaOption\n  var originalTransformCoordinates = loadImage.transformCoordinates\n  var originalGetTransformedOptions = loadImage.getTransformedOptions\n\n  // Determines if the target image should be a canvas element:\n  loadImage.hasCanvasOption = function (options) {\n    return (\n      !!options.orientation || originalHasCanvasOption.call(loadImage, options)\n    )\n  }\n\n  // Determines if meta data should be loaded automatically:\n  loadImage.hasMetaOption = function (options) {\n    return (\n      (options && options.orientation === true) ||\n      originalHasMetaOption.call(loadImage, options)\n    )\n  }\n\n  // Transform image orientation based on\n  // the given EXIF orientation option:\n  loadImage.transformCoordinates = function (canvas, options) {\n    originalTransformCoordinates.call(loadImage, canvas, options)\n    var ctx = canvas.getContext('2d')\n    var width = canvas.width\n    var height = canvas.height\n    var styleWidth = canvas.style.width\n    var styleHeight = canvas.style.height\n    var orientation = options.orientation\n    if (!orientation || orientation > 8) {\n      return\n    }\n    if (orientation > 4) {\n      canvas.width = height\n      canvas.height = width\n      canvas.style.width = styleHeight\n      canvas.style.height = styleWidth\n    }\n    switch (orientation) {\n      case 2:\n        // horizontal flip\n        ctx.translate(width, 0)\n        ctx.scale(-1, 1)\n        break\n      case 3:\n        // 180° rotate left\n        ctx.translate(width, height)\n        ctx.rotate(Math.PI)\n        break\n      case 4:\n        // vertical flip\n        ctx.translate(0, height)\n        ctx.scale(1, -1)\n        break\n      case 5:\n        // vertical flip + 90 rotate right\n        ctx.rotate(0.5 * Math.PI)\n        ctx.scale(1, -1)\n        break\n      case 6:\n        // 90° rotate right\n        ctx.rotate(0.5 * Math.PI)\n        ctx.translate(0, -height)\n        break\n      case 7:\n        // horizontal flip + 90 rotate right\n        ctx.rotate(0.5 * Math.PI)\n        ctx.translate(width, -height)\n        ctx.scale(-1, 1)\n        break\n      case 8:\n        // 90° rotate left\n        ctx.rotate(-0.5 * Math.PI)\n        ctx.translate(-width, 0)\n        break\n    }\n  }\n\n  // Transforms coordinate and dimension options\n  // based on the given orientation option:\n  loadImage.getTransformedOptions = function (img, opts, data) {\n    var options = originalGetTransformedOptions.call(loadImage, img, opts)\n    var orientation = options.orientation\n    var newOptions\n    var i\n    if (orientation === true && data && data.exif) {\n      orientation = data.exif.get('Orientation')\n    }\n    if (!orientation || orientation > 8 || orientation === 1) {\n      return options\n    }\n    newOptions = {}\n    for (i in options) {\n      if (options.hasOwnProperty(i)) {\n        newOptions[i] = options[i]\n      }\n    }\n    newOptions.orientation = orientation\n    switch (orientation) {\n      case 2:\n        // horizontal flip\n        newOptions.left = options.right\n        newOptions.right = options.left\n        break\n      case 3:\n        // 180° rotate left\n        newOptions.left = options.right\n        newOptions.top = options.bottom\n        newOptions.right = options.left\n        newOptions.bottom = options.top\n        break\n      case 4:\n        // vertical flip\n        newOptions.top = options.bottom\n        newOptions.bottom = options.top\n        break\n      case 5:\n        // vertical flip + 90 rotate right\n        newOptions.left = options.top\n        newOptions.top = options.left\n        newOptions.right = options.bottom\n        newOptions.bottom = options.right\n        break\n      case 6:\n        // 90° rotate right\n        newOptions.left = options.top\n        newOptions.top = options.right\n        newOptions.right = options.bottom\n        newOptions.bottom = options.left\n        break\n      case 7:\n        // horizontal flip + 90 rotate right\n        newOptions.left = options.bottom\n        newOptions.top = options.right\n        newOptions.right = options.top\n        newOptions.bottom = options.left\n        break\n      case 8:\n        // 90° rotate left\n        newOptions.left = options.bottom\n        newOptions.top = options.left\n        newOptions.right = options.top\n        newOptions.bottom = options.right\n        break\n    }\n    if (newOptions.orientation > 4) {\n      newOptions.maxWidth = options.maxHeight\n      newOptions.maxHeight = options.maxWidth\n      newOptions.minWidth = options.minHeight\n      newOptions.minHeight = options.minWidth\n      newOptions.sourceWidth = options.sourceHeight\n      newOptions.sourceHeight = options.sourceWidth\n    }\n    return newOptions\n  }\n})\n","module.exports = require('./load-image')\n\nrequire('./load-image-scale')\nrequire('./load-image-meta')\nrequire('./load-image-fetch')\nrequire('./load-image-exif')\nrequire('./load-image-exif-map')\nrequire('./load-image-orientation')\n"],"sourceRoot":""}